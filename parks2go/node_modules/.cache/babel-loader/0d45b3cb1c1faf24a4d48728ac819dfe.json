{"ast":null,"code":"// JavaScript Document\nimport React from'react';import Inprogress from'../progress_indicator/inProgress';//Material UI\nimport GridList from'@material-ui/core/GridList';import GridListTile from'@material-ui/core/GridListTile';import GridListTileBar from'@material-ui/core/GridListTileBar';let sCode=window.location.pathname;let newSC=sCode.split('/stateActivities/');newSC.shift();const targetId=newSC;const endpoint=\"statecode=\".concat(targetId,\"&limit=2\");//Smart Component\nclass ParkGridStateActivities extends React.Component{constructor(){super(...arguments);//declaring state and new object\nthis.state={parkArray:[],isLoading:false};}parkClick(event){window.onclick=event=>{//console.log(event.target);\nvar parkId=event.target.id;window.location.assign(\"https://jenplaza.github.io/parks2go/park/\".concat(parkId));};}//calling fetchData function\ncomponentDidMount(){this.fetchData();}//fetching API\nfetchData(){this.setState({isLoading:true},()=>{fetch(\"https://developer.nps.gov/api/v1/parks?\\t\".concat(endpoint,\"&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq\")).then(results=>{return results.json();}).then(data=>{this.setState({isLoading:false,data:data.data});});});}render(){const{data,isLoading}=this.state;//console.log(isLoading)//testing:true\nif(isLoading){return/*#__PURE__*/React.createElement(Inprogress,null);}let newArray=data;/*console.log(newArray)*/ //testing: newArray = data\nif(newArray!=null){return/*#__PURE__*/React.createElement(GridList,{cellHeight:450},newArray.map((use,i)=>/*#__PURE__*/React.createElement(GridListTile,{key:i,cols:1},/*#__PURE__*/React.createElement(\"img\",{key:use.images[0].id,id:use.parkCode,src:use.images[0].url,alt:use.images[0].altText,onClick:this.parkClick}),/*#__PURE__*/React.createElement(GridListTileBar,{title:use.images[0].title,subtitle:/*#__PURE__*/React.createElement(\"span\",null,use.addresses[0].city,\", \",use.addresses[0].stateCode)}))));}return/*#__PURE__*/React.createElement(\"div\",null,this.state.ParkGridStateActivities);}}export default ParkGridStateActivities;","map":{"version":3,"names":["React","Inprogress","GridList","GridListTile","GridListTileBar","sCode","window","location","pathname","newSC","split","shift","targetId","endpoint","concat","ParkGridStateActivities","Component","constructor","arguments","state","parkArray","isLoading","parkClick","event","onclick","parkId","target","id","assign","componentDidMount","fetchData","setState","fetch","then","results","json","data","render","createElement","newArray","cellHeight","map","use","i","key","cols","images","parkCode","src","url","alt","altText","onClick","title","subtitle","addresses","city","stateCode"],"sources":["/Users/jenplaza/jpDocs/PROJECTS/Projects/schoolProjects/parks2go/parks2go/src/components/grids/parkGridStateActivities.js"],"sourcesContent":["// JavaScript Document\nimport React from 'react';\nimport Inprogress from '../progress_indicator/inProgress'\n\n//Material UI\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\n\n let sCode = window.location.pathname;\n let newSC = sCode.split('/stateActivities/');\n newSC.shift();\n\nconst targetId = newSC;\nconst endpoint = `statecode=${targetId}&limit=2`;\n\n\n//Smart Component\nclass ParkGridStateActivities extends React.Component {\n\t//declaring state and new object\n\tstate ={\n\t\tparkArray: [],\n\t\tisLoading: false,\n\t}\n\nparkClick(event) {\n\twindow.onclick= event => {\n\t\t//console.log(event.target);\n\t\t\n\t\tvar parkId = event.target.id;\n\t\twindow.location.assign(`https://jenplaza.github.io/parks2go/park/${parkId}`);\n\t};\n} \n\n//calling fetchData function\n\tcomponentDidMount(){\n\tthis.fetchData();\n}\n\n//fetching API\nfetchData(){\n\t\t\tthis.setState({ isLoading: true }, () => {\n\t\t\t\tfetch(`https://developer.nps.gov/api/v1/parks?\t${endpoint}&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq`)\n\t\t\t\t.then(results =>{\n\t\t\t\treturn results.json();\n\t\t\t\t}).then(data => {this.setState({\n\t\t\t\tisLoading:false,\n\t\t\t\tdata:data.data\n\t\t\t})\n\t\t})\n\t})\n}\t\t   \n\t render() { \n\t\t const { data, isLoading } = this.state; \n\t\t \t//console.log(isLoading)//testing:true\n\t\t\t\n\t\t if(isLoading){\n            return <Inprogress />\n          }\n\t\t\t\n\t\t\tlet newArray = data;\n\t\t\t /*console.log(newArray)*///testing: newArray = data\n\t\t\t \n\t\t\tif (newArray != null) {\n        \t\treturn (\n            \t\t <GridList cellHeight={450} >\n                \t\t{newArray.map((use, i) =>\n\t\t\t\t\t\t\t<GridListTile key={i} cols={1} >\n\t\t\t\t\t\t\t\t<img key={use.images[0].id} id={use.parkCode} src={use.images[0].url} alt={use.images[0].altText}  onClick={this.parkClick}/>\n\t\t\t\t\t\t\t\t<GridListTileBar title={use.images[0].title} subtitle={<span>{use.addresses[0].city}, {use.addresses[0].stateCode}</span>} />\n\t\t\t\t\t\n\t\t\t\t\t\t\t</GridListTile>\t\n\t\t\t\t\t\t\t)}\n            \t\t</GridList>\n        \t\t);\n    \t\t}\n  \t\treturn (\n \t\t\t\t<div>\n\t  \t\t\t\t{this.state.ParkGridStateActivities}\t\n    \t\t\t</div>\n  \t\t\t\t);\n \t\t\t}\n\t\t}\n\t\texport default ParkGridStateActivities"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,UAAU,KAAM,kCAAkC,CAEzD;AACA,MAAO,CAAAC,QAAQ,KAAM,4BAA4B,CACjD,MAAO,CAAAC,YAAY,KAAM,gCAAgC,CACzD,MAAO,CAAAC,eAAe,KAAM,mCAAmC,CAE9D,GAAI,CAAAC,KAAK,CAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CACpC,GAAI,CAAAC,KAAK,CAAGJ,KAAK,CAACK,KAAK,CAAC,mBAAmB,CAAC,CAC5CD,KAAK,CAACE,KAAK,CAAC,CAAC,CAEd,KAAM,CAAAC,QAAQ,CAAGH,KAAK,CACtB,KAAM,CAAAI,QAAQ,cAAAC,MAAA,CAAgBF,QAAQ,YAAU,CAGhD;AACA,KAAM,CAAAG,uBAAuB,QAAS,CAAAf,KAAK,CAACgB,SAAU,CAAAC,YAAA,WAAAC,SAAA,EACrD;AAAA,KACAC,KAAK,CAAE,CACNC,SAAS,CAAE,EAAE,CACbC,SAAS,CAAE,KACZ,CAAC,EAEFC,SAASA,CAACC,KAAK,CAAE,CAChBjB,MAAM,CAACkB,OAAO,CAAED,KAAK,EAAI,CACxB;AAEA,GAAI,CAAAE,MAAM,CAAGF,KAAK,CAACG,MAAM,CAACC,EAAE,CAC5BrB,MAAM,CAACC,QAAQ,CAACqB,MAAM,6CAAAd,MAAA,CAA6CW,MAAM,CAAE,CAAC,CAC7E,CAAC,CACF,CAEA;AACCI,iBAAiBA,CAAA,CAAE,CACnB,IAAI,CAACC,SAAS,CAAC,CAAC,CACjB,CAEA;AACAA,SAASA,CAAA,CAAE,CACR,IAAI,CAACC,QAAQ,CAAC,CAAEV,SAAS,CAAE,IAAK,CAAC,CAAE,IAAM,CACxCW,KAAK,6CAAAlB,MAAA,CAA4CD,QAAQ,qDAAmD,CAAC,CAC5GoB,IAAI,CAACC,OAAO,EAAG,CAChB,MAAO,CAAAA,OAAO,CAACC,IAAI,CAAC,CAAC,CACrB,CAAC,CAAC,CAACF,IAAI,CAACG,IAAI,EAAI,CAAC,IAAI,CAACL,QAAQ,CAAC,CAC/BV,SAAS,CAAC,KAAK,CACfe,IAAI,CAACA,IAAI,CAACA,IACX,CAAC,CAAC,CACH,CAAC,CAAC,CACH,CAAC,CAAC,CACH,CACEC,MAAMA,CAAA,CAAG,CACR,KAAM,CAAED,IAAI,CAAEf,SAAU,CAAC,CAAG,IAAI,CAACF,KAAK,CACrC;AAED,GAAGE,SAAS,CAAC,CACJ,mBAAOrB,KAAA,CAAAsC,aAAA,CAACrC,UAAU,KAAE,CAAC,CACvB,CAEP,GAAI,CAAAsC,QAAQ,CAAGH,IAAI,CAClB,0BAAyB;AAE1B,GAAIG,QAAQ,EAAI,IAAI,CAAE,CACf,mBACKvC,KAAA,CAAAsC,aAAA,CAACpC,QAAQ,EAACsC,UAAU,CAAE,GAAI,EACtBD,QAAQ,CAACE,GAAG,CAAC,CAACC,GAAG,CAAEC,CAAC,gBAChC3C,KAAA,CAAAsC,aAAA,CAACnC,YAAY,EAACyC,GAAG,CAAED,CAAE,CAACE,IAAI,CAAE,CAAE,eAC7B7C,KAAA,CAAAsC,aAAA,QAAKM,GAAG,CAAEF,GAAG,CAACI,MAAM,CAAC,CAAC,CAAC,CAACnB,EAAG,CAACA,EAAE,CAAEe,GAAG,CAACK,QAAS,CAACC,GAAG,CAAEN,GAAG,CAACI,MAAM,CAAC,CAAC,CAAC,CAACG,GAAI,CAACC,GAAG,CAAER,GAAG,CAACI,MAAM,CAAC,CAAC,CAAC,CAACK,OAAQ,CAAEC,OAAO,CAAE,IAAI,CAAC9B,SAAU,CAAC,CAAC,cAC7HtB,KAAA,CAAAsC,aAAA,CAAClC,eAAe,EAACiD,KAAK,CAAEX,GAAG,CAACI,MAAM,CAAC,CAAC,CAAC,CAACO,KAAM,CAACC,QAAQ,cAAEtD,KAAA,CAAAsC,aAAA,aAAOI,GAAG,CAACa,SAAS,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAE,CAACd,GAAG,CAACa,SAAS,CAAC,CAAC,CAAC,CAACE,SAAgB,CAAE,CAAE,CAE/G,CACd,CACiB,CAAC,CAEnB,CACF,mBACCzD,KAAA,CAAAsC,aAAA,YACG,IAAI,CAACnB,KAAK,CAACJ,uBACP,CAAC,CAET,CACF,CACA,cAAe,CAAAA,uBAAuB"},"metadata":{},"sourceType":"module"}