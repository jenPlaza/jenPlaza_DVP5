{"ast":null,"code":"var _jsxFileName = \"/Users/jenplaza/jpDocs/PROJECTS/Projects/schoolProjects/parks2go/parks2go/src/components/grids/parkGridHome.js\";\n// JavaScript Document\nimport React from 'react'; //Material UI\n\nimport GridList from '@material-ui/core/GridList';\nimport Grid from '@material-ui/core/Grid';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport Inprogress from '../progress_indicator/inProgress';\nconst endpoint = 'limit=3'; //Smart Component\n\nclass ParkGridHome extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      imageListing: []\n    };\n  }\n\n  parkClick(event) {\n    window.onclick = event => {\n      //console.log(event.target);\n      var parkId = event.target.id;\n      window.location.assign(`https://jenplaza.github.io/parks2go/park/${parkId}`);\n    };\n  } //calling fetchData function\n\n\n  componentDidMount() {\n    this.fetchData();\n  } //fetching API\n\n\n  fetchData() {\n    this.setState({\n      isLoading: true\n    }, () => {\n      fetch(`https://developer.nps.gov/api/v1/parks?\t${endpoint}&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq`).then(results => {\n        return results.json();\n      }).then(data => {\n        this.setState({\n          isLoading: false,\n          data: data.data\n        });\n      });\n    });\n  }\n\n  render() {\n    const {\n      data,\n      isLoading\n    } = this.state;\n    /*console.log(isLoading)*/\n    //testing: true\n\n    if (isLoading) {\n      return /*#__PURE__*/React.createElement(Inprogress, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 20\n        }\n      });\n    }\n\n    let newArray = data;\n    /*console.log(newArray)*/\n    //testing: newArray = data\n\n    if (newArray != null) {\n      return /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 5\n        }\n      }, newArray.map((use, i) => /*#__PURE__*/React.createElement(GridList, {\n        key: i,\n        cellHeight: 325,\n        style: styles.gridList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(GridListTile, {\n        cols: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        id: use.parkCode,\n        src: use.images[0].url,\n        alt: use.images[0].altText,\n        onClick: this.parkClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(GridListTileBar, {\n        title: use.images[0].title,\n        subtitle: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 60\n          }\n        }, use.addresses[0].city, \", \", use.addresses[0].stateCode),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 5\n        }\n      })))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 6\n      }\n    }, this.state.ParkGridHome);\n  }\n\n}\n\nexport default ParkGridHome;\nconst styles = {\n  gridList: {\n    paddingBottom: '0.5%'\n  }\n};","map":{"version":3,"sources":["/Users/jenplaza/jpDocs/PROJECTS/Projects/schoolProjects/parks2go/parks2go/src/components/grids/parkGridHome.js"],"names":["React","GridList","Grid","GridListTile","GridListTileBar","Inprogress","endpoint","ParkGridHome","Component","state","imageListing","parkClick","event","window","onclick","parkId","target","id","location","assign","componentDidMount","fetchData","setState","isLoading","fetch","then","results","json","data","render","newArray","map","use","i","styles","gridList","parkCode","images","url","altText","title","addresses","city","stateCode","paddingBottom"],"mappings":"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","sourcesContent":["// JavaScript Document\nimport React from 'react';\n\n//Material UI\nimport GridList from '@material-ui/core/GridList';\nimport Grid from '@material-ui/core/Grid';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport Inprogress from '../progress_indicator/inProgress'\n\nconst endpoint = 'limit=3';\n\n//Smart Component\nclass ParkGridHome extends React.Component {\n\t//declaring state and new object\n\tstate ={\n\t\timageListing: []\n\t}\n\nparkClick(event) {\n\twindow.onclick= event => {\n\t\t//console.log(event.target);\n\t\t\n\t\tvar parkId = event.target.id;\n\t\twindow.location.assign(`https://jenplaza.github.io/parks2go/park/${parkId}`);\n\t};\n} \n\n//calling fetchData function\n\tcomponentDidMount(){\n\tthis.fetchData();\n}\n\n//fetching API\nfetchData(){\n\t\t\tthis.setState({ isLoading: true }, () => {\n\t\t\t\tfetch(`https://developer.nps.gov/api/v1/parks?\t${endpoint}&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq`)\n\t\t\t\t.then(results =>{\n\t\t\t\treturn results.json();\n\t\t\t\t}).then(data => {this.setState({\n\t\t\t\tisLoading:false,\n\t\t\t\tdata:data.data\n\t\t\t})\n\t\t})\n\t})\n}\n\n render(){\n\t\t const { data, isLoading } = this.state; \n\t\t \t/*console.log(isLoading)*///testing: true\n\t\t\t\n\t\t if(isLoading){\n            return <Inprogress />\n          }\n\t\t\t\n\t\t\tlet newArray = data;\n\t\t\t /*console.log(newArray)*/ //testing: newArray = data\n\t\t\t \n\t\t\tif (newArray != null) {\n        \t\treturn (\n\t\t\t\t<Grid container  >\n\t\t\t\t\t{newArray.map((use, i) =>\n\t\t\t\t<GridList key={i} cellHeight={325} style={styles.gridList}>\n\t\t\t\t<GridListTile cols={2} >\n\t\t\t\t\t<img id={use.parkCode} src={use.images[0].url} alt={use.images[0].altText} onClick={this.parkClick} />\n\t\t\t\t<GridListTileBar title={use.images[0].title} subtitle={<span>{use.addresses[0].city}, {use.addresses[0].stateCode}</span>} />\n\t\t\t\t</GridListTile>\t\n\t\t\t\t</GridList>\n\t\t\t\t\t)}\n            \t\t</Grid>\n        \t\t)}\n    \t\t\n  \t\treturn (\n \t\t\t\t<div>\n\t  \t\t\t\t{this.state.ParkGridHome}\t\n    \t\t\t</div>\n  \t\t\t\t);\n \t\t\t}\n\t\t}\nexport default ParkGridHome;\nconst styles ={\n\tgridList:{\n\t\tpaddingBottom:'0.5%',\n\t},\n};"]},"metadata":{},"sourceType":"module"}