{"ast":null,"code":"var _jsxFileName = \"/Users/jenplaza/Documents/SHARE/schoolProjects/jenPlaza_DVP5/parks2go/src/components/progress_indicator/inProgress.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\nexport default function LinearBuffer() {\n  const classes = useStyles();\n  const [completed, setCompleted] = React.useState(0);\n  const [buffer, setBuffer] = React.useState(10);\n  const progress = React.useRef(() => {});\n  React.useEffect(() => {\n    progress.current = () => {\n      if (completed > 100) {\n        setCompleted(0);\n        setBuffer(10);\n      } else {\n        const diff = Math.random() * 10;\n        const diff2 = Math.random() * 10;\n        setCompleted(completed + diff);\n        setBuffer(completed + diff + diff2);\n      }\n    };\n  });\n  React.useEffect(() => {\n    function tick() {\n      progress.current();\n    }\n\n    const timer = setInterval(tick, 500);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LinearProgress, {\n    variant: \"buffer\",\n    value: completed,\n    valueBuffer: buffer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(LinearProgress, {\n    variant: \"buffer\",\n    value: completed,\n    valueBuffer: buffer,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/jenplaza/Documents/SHARE/schoolProjects/jenPlaza_DVP5/parks2go/src/components/progress_indicator/inProgress.js"],"names":["React","makeStyles","LinearProgress","useStyles","theme","root","width","marginTop","spacing","LinearBuffer","classes","completed","setCompleted","useState","buffer","setBuffer","progress","useRef","useEffect","current","diff","Math","random","diff2","tick","timer","setInterval","clearInterval"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJ,iBAAa;AACXC,MAAAA,SAAS,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AADA;AAFT;AADiC,CAAZ,CAAD,CAA5B;AASA,eAAe,SAASC,YAAT,GAAwB;AACrC,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BZ,KAAK,CAACa,QAAN,CAAe,CAAf,CAAlC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBf,KAAK,CAACa,QAAN,CAAe,EAAf,CAA5B;AAEA,QAAMG,QAAQ,GAAGhB,KAAK,CAACiB,MAAN,CAAa,MAAM,CAAE,CAArB,CAAjB;AACAjB,EAAAA,KAAK,CAACkB,SAAN,CAAgB,MAAM;AACpBF,IAAAA,QAAQ,CAACG,OAAT,GAAmB,MAAM;AACvB,UAAIR,SAAS,GAAG,GAAhB,EAAqB;AACnBC,QAAAA,YAAY,CAAC,CAAD,CAAZ;AACAG,QAAAA,SAAS,CAAC,EAAD,CAAT;AACD,OAHD,MAGO;AACL,cAAMK,IAAI,GAAGC,IAAI,CAACC,MAAL,KAAgB,EAA7B;AACA,cAAMC,KAAK,GAAGF,IAAI,CAACC,MAAL,KAAgB,EAA9B;AACAV,QAAAA,YAAY,CAACD,SAAS,GAAGS,IAAb,CAAZ;AACAL,QAAAA,SAAS,CAACJ,SAAS,GAAGS,IAAZ,GAAmBG,KAApB,CAAT;AACD;AACF,KAVD;AAWD,GAZD;AAcAvB,EAAAA,KAAK,CAACkB,SAAN,CAAgB,MAAM;AACpB,aAASM,IAAT,GAAgB;AACdR,MAAAA,QAAQ,CAACG,OAAT;AACD;;AACD,UAAMM,KAAK,GAAGC,WAAW,CAACF,IAAD,EAAO,GAAP,CAAzB;AAEA,WAAO,MAAM;AACXG,MAAAA,aAAa,CAACF,KAAD,CAAb;AACD,KAFD;AAGD,GATD,EASG,EATH;AAWA,sBACE;AAAK,IAAA,SAAS,EAAEf,OAAO,CAACL,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAC,QAAxB;AAAiC,IAAA,KAAK,EAAEM,SAAxC;AAAmD,IAAA,WAAW,EAAEG,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAC,QAAxB;AAAiC,IAAA,KAAK,EAAEH,SAAxC;AAAmD,IAAA,WAAW,EAAEG,MAAhE;AAAwE,IAAA,KAAK,EAAC,WAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function LinearBuffer() {\n  const classes = useStyles();\n  const [completed, setCompleted] = React.useState(0);\n  const [buffer, setBuffer] = React.useState(10);\n\n  const progress = React.useRef(() => {});\n  React.useEffect(() => {\n    progress.current = () => {\n      if (completed > 100) {\n        setCompleted(0);\n        setBuffer(10);\n      } else {\n        const diff = Math.random() * 10;\n        const diff2 = Math.random() * 10;\n        setCompleted(completed + diff);\n        setBuffer(completed + diff + diff2);\n      }\n    };\n  });\n\n  React.useEffect(() => {\n    function tick() {\n      progress.current();\n    }\n    const timer = setInterval(tick, 500);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <LinearProgress variant=\"buffer\" value={completed} valueBuffer={buffer} />\n      <LinearProgress variant=\"buffer\" value={completed} valueBuffer={buffer} color=\"secondary\" />\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}