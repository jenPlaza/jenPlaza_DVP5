{"ast":null,"code":"import _classCallCheck from\"/Users/jenplaza/jpDocs/PROJECTS/Projects/schoolProjects/p2g/parks2go/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jenplaza/jpDocs/PROJECTS/Projects/schoolProjects/p2g/parks2go/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/jenplaza/jpDocs/PROJECTS/Projects/schoolProjects/p2g/parks2go/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/jenplaza/jpDocs/PROJECTS/Projects/schoolProjects/p2g/parks2go/node_modules/@babel/runtime/helpers/esm/inherits\";// JavaScript Document\nimport React from'react';import Inprogress from'../progress_indicator/inProgress';//Material UI\nimport GridList from'@material-ui/core/GridList';import GridListTile from'@material-ui/core/GridListTile';import GridListTileBar from'@material-ui/core/GridListTileBar';var sCode=window.location.pathname;var newSC=sCode.split('/stateActivities/');newSC.shift();var targetId=newSC;var endpoint=\"statecode=\".concat(targetId,\"&limit=2\");//Smart Component\nvar ParkGridStateActivities=/*#__PURE__*/function(_React$Component){_inherits(ParkGridStateActivities,_React$Component);var _super=_createSuper(ParkGridStateActivities);function ParkGridStateActivities(){var _this;_classCallCheck(this,ParkGridStateActivities);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={parkArray:[],isLoading:false};return _this;}_createClass(ParkGridStateActivities,[{key:\"parkClick\",value:function parkClick(event){window.onclick=function(event){//console.log(event.target);\nvar parkId=event.target.id;window.location.assign(\"https://jenplaza.github.io/parks2go/park/\".concat(parkId));};}//calling fetchData function\n},{key:\"componentDidMount\",value:function componentDidMount(){this.fetchData();}//fetching API\n},{key:\"fetchData\",value:function fetchData(){var _this2=this;this.setState({isLoading:true},function(){fetch(\"https://developer.nps.gov/api/v1/parks?\\t\".concat(endpoint,\"&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq\")).then(function(results){return results.json();}).then(function(data){_this2.setState({isLoading:false,data:data.data});});});}},{key:\"render\",value:function render(){var _this3=this;var _this$state=this.state,data=_this$state.data,isLoading=_this$state.isLoading;//console.log(isLoading)//testing:true\nif(isLoading){return/*#__PURE__*/React.createElement(Inprogress,null);}var newArray=data;/*console.log(newArray)*/ //testing: newArray = data\nif(newArray!=null){return/*#__PURE__*/React.createElement(GridList,{cellHeight:450},newArray.map(function(use,i){return/*#__PURE__*/React.createElement(GridListTile,{key:i,cols:1},/*#__PURE__*/React.createElement(\"img\",{key:use.images[0].id,id:use.parkCode,src:use.images[0].url,alt:use.images[0].altText,onClick:_this3.parkClick}),/*#__PURE__*/React.createElement(GridListTileBar,{title:use.images[0].title,subtitle:/*#__PURE__*/React.createElement(\"span\",null,use.addresses[0].city,\", \",use.addresses[0].stateCode)}));}));}return/*#__PURE__*/React.createElement(\"div\",null,this.state.ParkGridStateActivities);}}]);return ParkGridStateActivities;}(React.Component);export default ParkGridStateActivities;","map":{"version":3,"sources":["/Users/jenplaza/jpDocs/PROJECTS/Projects/schoolProjects/p2g/parks2go/src/components/grids/parkGridStateActivities.js"],"names":["React","Inprogress","GridList","GridListTile","GridListTileBar","sCode","window","location","pathname","newSC","split","shift","targetId","endpoint","ParkGridStateActivities","state","parkArray","isLoading","event","onclick","parkId","target","id","assign","fetchData","setState","fetch","then","results","json","data","newArray","map","use","i","images","parkCode","url","altText","parkClick","title","addresses","city","stateCode","Component"],"mappings":"4kBAAA;AACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,kCAAvB,CAEA;AACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gCAAzB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mCAA5B,CAEC,GAAIC,CAAAA,KAAK,CAAGC,MAAM,CAACC,QAAP,CAAgBC,QAA5B,CACA,GAAIC,CAAAA,KAAK,CAAGJ,KAAK,CAACK,KAAN,CAAY,mBAAZ,CAAZ,CACAD,KAAK,CAACE,KAAN,GAED,GAAMC,CAAAA,QAAQ,CAAGH,KAAjB,CACA,GAAMI,CAAAA,QAAQ,qBAAgBD,QAAhB,YAAd,CAGA;GACME,CAAAA,uB,2YAELC,K,CAAO,CACNC,SAAS,CAAE,EADL,CAENC,SAAS,CAAE,KAFL,C,+FAKEC,K,CAAO,CAChBZ,MAAM,CAACa,OAAP,CAAgB,SAAAD,KAAK,CAAI,CACxB;AAEA,GAAIE,CAAAA,MAAM,CAAGF,KAAK,CAACG,MAAN,CAAaC,EAA1B,CACAhB,MAAM,CAACC,QAAP,CAAgBgB,MAAhB,oDAAmEH,MAAnE,GACA,CALD,CAMA,CAED;6DACoB,CACnB,KAAKI,SAAL,GACA,CAED;6CACW,iBACR,KAAKC,QAAL,CAAc,CAAER,SAAS,CAAE,IAAb,CAAd,CAAmC,UAAM,CACxCS,KAAK,oDAA4Cb,QAA5C,sDAAL,CACCc,IADD,CACM,SAAAC,OAAO,CAAG,CAChB,MAAOA,CAAAA,OAAO,CAACC,IAAR,EAAP,CACC,CAHD,EAGGF,IAHH,CAGQ,SAAAG,IAAI,CAAI,CAAC,MAAI,CAACL,QAAL,CAAc,CAC/BR,SAAS,CAAC,KADqB,CAE/Ba,IAAI,CAACA,IAAI,CAACA,IAFqB,CAAd,EAIlB,CAPC,EAQF,CATC,EAUF,C,uCACU,iCACoB,KAAKf,KADzB,CACAe,IADA,aACAA,IADA,CACMb,SADN,aACMA,SADN,CAEP;AAED,GAAGA,SAAH,CAAa,CACJ,mBAAO,oBAAC,UAAD,MAAP,CACD,CAER,GAAIc,CAAAA,QAAQ,CAAGD,IAAf,CACC,yBATO,CASkB;AAE1B,GAAIC,QAAQ,EAAI,IAAhB,CAAsB,CACf,mBACK,oBAAC,QAAD,EAAU,UAAU,CAAE,GAAtB,EACIA,QAAQ,CAACC,GAAT,CAAa,SAACC,GAAD,CAAMC,CAAN,qBACzB,oBAAC,YAAD,EAAc,GAAG,CAAEA,CAAnB,CAAsB,IAAI,CAAE,CAA5B,eACC,2BAAK,GAAG,CAAED,GAAG,CAACE,MAAJ,CAAW,CAAX,EAAcb,EAAxB,CAA4B,EAAE,CAAEW,GAAG,CAACG,QAApC,CAA8C,GAAG,CAAEH,GAAG,CAACE,MAAJ,CAAW,CAAX,EAAcE,GAAjE,CAAsE,GAAG,CAAEJ,GAAG,CAACE,MAAJ,CAAW,CAAX,EAAcG,OAAzF,CAAmG,OAAO,CAAE,MAAI,CAACC,SAAjH,EADD,cAEC,oBAAC,eAAD,EAAiB,KAAK,CAAEN,GAAG,CAACE,MAAJ,CAAW,CAAX,EAAcK,KAAtC,CAA6C,QAAQ,cAAE,gCAAOP,GAAG,CAACQ,SAAJ,CAAc,CAAd,EAAiBC,IAAxB,MAAgCT,GAAG,CAACQ,SAAJ,CAAc,CAAd,EAAiBE,SAAjD,CAAvD,EAFD,CADyB,EAAb,CADJ,CADL,CAWH,CACH,mBACC,+BACG,KAAK5B,KAAL,CAAWD,uBADd,CADD,CAKC,C,qCA/DiCd,KAAK,CAAC4C,S,EAiE1C,cAAe9B,CAAAA,uBAAf","sourcesContent":["// JavaScript Document\nimport React from 'react';\nimport Inprogress from '../progress_indicator/inProgress'\n\n//Material UI\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\n\n let sCode = window.location.pathname;\n let newSC = sCode.split('/stateActivities/');\n newSC.shift();\n\nconst targetId = newSC;\nconst endpoint = `statecode=${targetId}&limit=2`;\n\n\n//Smart Component\nclass ParkGridStateActivities extends React.Component {\n\t//declaring state and new object\n\tstate ={\n\t\tparkArray: [],\n\t\tisLoading: false,\n\t}\n\nparkClick(event) {\n\twindow.onclick= event => {\n\t\t//console.log(event.target);\n\t\t\n\t\tvar parkId = event.target.id;\n\t\twindow.location.assign(`https://jenplaza.github.io/parks2go/park/${parkId}`);\n\t};\n} \n\n//calling fetchData function\n\tcomponentDidMount(){\n\tthis.fetchData();\n}\n\n//fetching API\nfetchData(){\n\t\t\tthis.setState({ isLoading: true }, () => {\n\t\t\t\tfetch(`https://developer.nps.gov/api/v1/parks?\t${endpoint}&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq`)\n\t\t\t\t.then(results =>{\n\t\t\t\treturn results.json();\n\t\t\t\t}).then(data => {this.setState({\n\t\t\t\tisLoading:false,\n\t\t\t\tdata:data.data\n\t\t\t})\n\t\t})\n\t})\n}\t\t   \n\t render() { \n\t\t const { data, isLoading } = this.state; \n\t\t \t//console.log(isLoading)//testing:true\n\t\t\t\n\t\t if(isLoading){\n            return <Inprogress />\n          }\n\t\t\t\n\t\t\tlet newArray = data;\n\t\t\t /*console.log(newArray)*///testing: newArray = data\n\t\t\t \n\t\t\tif (newArray != null) {\n        \t\treturn (\n            \t\t <GridList cellHeight={450} >\n                \t\t{newArray.map((use, i) =>\n\t\t\t\t\t\t\t<GridListTile key={i} cols={1} >\n\t\t\t\t\t\t\t\t<img key={use.images[0].id} id={use.parkCode} src={use.images[0].url} alt={use.images[0].altText}  onClick={this.parkClick}/>\n\t\t\t\t\t\t\t\t<GridListTileBar title={use.images[0].title} subtitle={<span>{use.addresses[0].city}, {use.addresses[0].stateCode}</span>} />\n\t\t\t\t\t\n\t\t\t\t\t\t\t</GridListTile>\t\n\t\t\t\t\t\t\t)}\n            \t\t</GridList>\n        \t\t);\n    \t\t}\n  \t\treturn (\n \t\t\t\t<div>\n\t  \t\t\t\t{this.state.ParkGridStateActivities}\t\n    \t\t\t</div>\n  \t\t\t\t);\n \t\t\t}\n\t\t}\n\t\texport default ParkGridStateActivities"]},"metadata":{},"sourceType":"module"}