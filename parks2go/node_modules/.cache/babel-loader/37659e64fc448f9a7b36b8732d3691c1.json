{"ast":null,"code":"var _jsxFileName = \"/Users/jenplaza/jpDocs/PROJECTS/Projects/schoolProjects/parks2go/parks2go/src/pages/Park.js\";\n// JavaScript Document\nimport React from 'react';\nimport ImgGallery from '../components/imgGallery/imgGallery'; //Material UI\n\nimport Grid from '@material-ui/core/Grid';\nimport Inprogress from '../components/progress_indicator/inProgress';\nimport { withStyles } from '@material-ui/styles'; //Images & Icons\n\nimport imgUrl from '../images/parkBackground.png';\n\nconst useStyles = theme => ({\n  container: {\n    backgroundImage: 'url(' + imgUrl + ')',\n    marginBottom: '-3%',\n    paddingBottom: '12%',\n    paddingLeft: '2%',\n    justifyContent: 'space-around'\n  },\n  imgs: {\n    backgroundColor: 'rgb(15,15,15,0.7)',\n    borderBottomLeftRadius: '30',\n    borderBottomRightRadius: '30'\n  },\n  leftCol: {\n    color: 'white',\n    justifyContent: 'space-around',\n    padding: '1%',\n    [theme.breakpoints.up('md')]: {\n      marginTop: '3%'\n    }\n  },\n  rightCol: {\n    color: 'white',\n    justifyContent: 'space-around',\n    paddingLeft: '3%'\n  },\n  h1: {\n    fontSize: '3rem'\n  },\n  h3: {\n    marginTop: '-8%',\n    fontSize: 'smaller'\n  },\n  moveUp: {\n    marginTop: '-4%'\n  },\n  activities: {\n    marginTop: '8%',\n    marginBottom: '12%'\n  },\n  list: {\n    columns: '3 auto',\n    listStyleType: 'none'\n  },\n  ul: {\n    margin: '0',\n    padding: '1%',\n    listStyleType: 'none'\n  },\n  topics: {\n    columns: '3 auto',\n    listStyleType: 'none',\n    marginBottom: '12%'\n  },\n  description: {\n    marginTop: '5%',\n    marginBottom: '5%'\n  },\n  details: {\n    marginBottom: '5%'\n  },\n  directions: {\n    marginBottom: '12%'\n  }\n});\n\nlet pCode = window.location.pathname;\nlet newPC = pCode.split('/park/');\nnewPC.shift();\nconst parkId = newPC;\nconst endpoint = `parkCode=${parkId}`; //Smart Component\n\nclass Park extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      parkListing: []\n    };\n  }\n\n  //calling fetchData function\n  componentDidMount() {\n    this.fetchData();\n  } //search json api file: https://developer.nps.gov/api/v1/parks?api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq\n  //fetch Api data and map json results in a list format\n\n\n  fetchData() {\n    this.setState({\n      isLoading: true\n    }, () => {\n      fetch(`https://developer.nps.gov/api/v1/parks?${endpoint}&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq`).then(results => {\n        return results.json();\n      }).then(data => {\n        this.setState({\n          isLoading: false,\n          data: data.data\n        });\n      });\n    });\n  }\n\n  render() {\n    const {\n      data,\n      isLoading\n    } = this.state;\n    const {\n      classes\n    } = this.props;\n    /*console.log(isLoading)*/\n    //testing : true\n\n    if (isLoading) {\n      return /*#__PURE__*/React.createElement(Inprogress, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 14\n        }\n      });\n    }\n\n    let newArray = data;\n\n    if (newArray != null) {\n      /*added a ternary operaor starting on line 154 fixing null entrance fee array using '<>.if..</> : else' */\n      return /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        className: classes.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }\n      }, newArray.map((use, i) => /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        key: i,\n        xs: 12,\n        md: 4,\n        className: classes.leftCol,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: classes.h1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 23\n        }\n      }, use.name), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"h3\", {\n        className: classes.h3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 23\n        }\n      }, use.addresses[0].line1, \", \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 51\n        }\n      }), use.addresses[0].city, \", \", use.addresses[0].stateCode, ' ', use.addresses[0].postalCode)))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.description,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 19\n        }\n      }, \"Park Description\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: classes.moveUp,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 19\n        }\n      }, use.description)), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.details,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 19\n        }\n      }, \"Park Details\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: classes.moveUp,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 19\n        }\n      }, use.entranceFees[0] ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }\n      }, use.entranceFees[0].description), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }\n      }, \"Cost: \"), use.entranceFees[0].cost) : /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 23\n        }\n      }, ' ', \"Entrance fees are not available; please contact the state park for more informaion\", ' '))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.directions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 19\n        }\n      }, \"Park Directions\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: classes.moveUp,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 19\n        }\n      }, use.directionsInfo))))), newArray.map((use, i) => /*#__PURE__*/React.createElement(Grid, {\n        key: i,\n        item: true,\n        xs: 12,\n        md: 8,\n        className: classes.rightCol,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.imgs,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(ImgGallery, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.activities,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }\n      }, \"Park Activities\"), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 11,\n        className: classes.list,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        className: classes.ul,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 19\n        }\n      }, use.activities.map(activity => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: activity.id,\n          style: {\n            backgroundColor: 'rgb(15,15,15,0.5)'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }\n        }, activity.name);\n      })))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 17\n        }\n      }, \"Park Topics\"), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 11,\n        className: classes.topics,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        className: classes.ul,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 19\n        }\n      }, use.topics.map(topic => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: topic.id,\n          style: {\n            backgroundColor: 'rgb(15,15,15,0.5)'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }\n        }, topic.name);\n      })))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 11,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 17\n        }\n      }, \"Weather Information\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 17\n        }\n      }, use.weatherInfo)))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 12\n      }\n    }, this.state.park);\n  }\n\n}\n\nexport default withStyles(useStyles)(Park);","map":{"version":3,"sources":["/Users/jenplaza/jpDocs/PROJECTS/Projects/schoolProjects/parks2go/parks2go/src/pages/Park.js"],"names":["React","ImgGallery","Grid","Inprogress","withStyles","imgUrl","useStyles","theme","container","backgroundImage","marginBottom","paddingBottom","paddingLeft","justifyContent","imgs","backgroundColor","borderBottomLeftRadius","borderBottomRightRadius","leftCol","color","padding","breakpoints","up","marginTop","rightCol","h1","fontSize","h3","moveUp","activities","list","columns","listStyleType","ul","margin","topics","description","details","directions","pCode","window","location","pathname","newPC","split","shift","parkId","endpoint","Park","Component","state","parkListing","componentDidMount","fetchData","setState","isLoading","fetch","then","results","json","data","render","classes","props","newArray","map","use","i","name","addresses","line1","city","stateCode","postalCode","entranceFees","cost","directionsInfo","activity","id","topic","weatherInfo","park"],"mappings":"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","sourcesContent":["// JavaScript Document\nimport React from 'react';\nimport ImgGallery from '../components/imgGallery/imgGallery';\n\n//Material UI\nimport Grid from '@material-ui/core/Grid';\nimport Inprogress from '../components/progress_indicator/inProgress';\nimport { withStyles } from '@material-ui/styles';\n\n//Images & Icons\nimport imgUrl from '../images/parkBackground.png';\n\nconst useStyles = (theme) => ({\n  container: {\n    backgroundImage: 'url(' + imgUrl + ')',\n    marginBottom: '-3%',\n    paddingBottom: '12%',\n    paddingLeft: '2%',\n    justifyContent: 'space-around',\n  },\n  imgs: {\n    backgroundColor: 'rgb(15,15,15,0.7)',\n    borderBottomLeftRadius: '30',\n    borderBottomRightRadius: '30',\n  },\n  leftCol: {\n    color: 'white',\n    justifyContent: 'space-around',\n    padding: '1%',\n    [theme.breakpoints.up('md')]: {\n      marginTop: '3%',\n    },\n  },\n  rightCol: {\n    color: 'white',\n    justifyContent: 'space-around',\n    paddingLeft: '3%',\n  },\n  h1: {\n    fontSize: '3rem',\n  },\n  h3: {\n    marginTop: '-8%',\n    fontSize: 'smaller',\n  },\n  moveUp: {\n    marginTop: '-4%',\n  },\n  activities: {\n    marginTop: '8%',\n    marginBottom: '12%',\n  },\n  list: {\n    columns: '3 auto',\n    listStyleType: 'none',\n  },\n  ul: {\n    margin: '0',\n    padding: '1%',\n    listStyleType: 'none',\n  },\n  topics: {\n    columns: '3 auto',\n    listStyleType: 'none',\n    marginBottom: '12%',\n  },\n  description: {\n    marginTop: '5%',\n    marginBottom: '5%',\n  },\n  details: {\n    marginBottom: '5%',\n  },\n  directions: {\n    marginBottom: '12%',\n  },\n});\n\nlet pCode = window.location.pathname;\nlet newPC = pCode.split('/park/');\nnewPC.shift();\nconst parkId = newPC;\nconst endpoint = `parkCode=${parkId}`;\n\n//Smart Component\nclass Park extends React.Component {\n  //declaring state and new object\n  state = {\n    parkListing: [],\n  };\n\n  //calling fetchData function\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  //search json api file: https://developer.nps.gov/api/v1/parks?api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq\n  //fetch Api data and map json results in a list format\n  fetchData() {\n    this.setState({ isLoading: true }, () => {\n      fetch(\n        `https://developer.nps.gov/api/v1/parks?${endpoint}&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq`\n      )\n        .then((results) => {\n          return results.json();\n        })\n        .then((data) => {\n          this.setState({\n            isLoading: false,\n            data: data.data,\n          });\n        });\n    });\n  }\n  render() {\n    const { data, isLoading } = this.state;\n    const { classes } = this.props;\n\n    /*console.log(isLoading)*/ //testing : true\n\n    if (isLoading) {\n      return <Inprogress />;\n    }\n\n    let newArray = data;\n\n    if (newArray != null) {\n      /*added a ternary operaor starting on line 154 fixing null entrance fee array using '<>.if..</> : else' */\n      return (\n        <Grid container className={classes.container}>\n          {newArray.map((use, i) => (\n            <Grid item key={i} xs={12} md={4} className={classes.leftCol}>\n              <Grid container>\n                <Grid item xs={12}>\n                  <Grid container>\n                    <Grid item xs={12}>\n                      <h1 className={classes.h1}>{use.name}</h1>\n                      <br />\n                      <h3 className={classes.h3}>\n                        {use.addresses[0].line1}, <br />\n                        {use.addresses[0].city}, {use.addresses[0].stateCode}{' '}\n                        {use.addresses[0].postalCode}\n                      </h3>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Grid item xs={12} className={classes.description}>\n                  <h2>Park Description</h2>\n                  <p className={classes.moveUp}>{use.description}</p>\n                </Grid>\n\n                <Grid item xs={12} className={classes.details}>\n                  <h2>Park Details</h2>\n                  <p className={classes.moveUp}>\n                    {use.entranceFees[0] ? (\n                      <>\n                        <b>{use.entranceFees[0].description}</b>\n                        <br />\n                        <b>Cost: </b>\n                        {use.entranceFees[0].cost}\n                      </>\n                    ) : (\n                      <p>\n                        {' '}\n                        Entrance fees are not available; please contact the\n                        state park for more informaion{' '}\n                      </p>\n                    )}\n                  </p>\n                </Grid>\n                <Grid item xs={12} className={classes.directions}>\n                  <h2>Park Directions</h2>\n                  <p className={classes.moveUp}>{use.directionsInfo}</p>\n                </Grid>\n              </Grid>\n            </Grid>\n          ))}\n          {newArray.map((use, i) => (\n            <Grid key={i} item xs={12} md={8} className={classes.rightCol}>\n              <Grid item xs={12} className={classes.imgs}>\n                <ImgGallery />\n              </Grid>\n              <Grid item xs={12} className={classes.activities}>\n                <h2>Park Activities</h2>\n                <Grid item xs={11} className={classes.list}>\n                  <ul className={classes.ul}>\n                    {use.activities.map((activity) => {\n                      return (\n                        <li\n                          key={activity.id}\n                          style={{ backgroundColor: 'rgb(15,15,15,0.5)' }}\n                        >\n                          {activity.name}\n                        </li>\n                      );\n                    })}\n                  </ul>\n                </Grid>\n              </Grid>\n\n              <Grid item xs={12}>\n                <h2>Park Topics</h2>\n                <Grid item xs={11} className={classes.topics}>\n                  <ul className={classes.ul}>\n                    {use.topics.map((topic) => {\n                      return (\n                        <li\n                          key={topic.id}\n                          style={{ backgroundColor: 'rgb(15,15,15,0.5)' }}\n                        >\n                          {topic.name}\n                        </li>\n                      );\n                    })}\n                  </ul>\n                </Grid>\n              </Grid>\n\n              <Grid item xs={11}>\n                <h2>Weather Information</h2>\n                <p>{use.weatherInfo}</p>\n              </Grid>\n            </Grid>\n          ))}\n        </Grid>\n      );\n    }\n\n    return <div className={classes.container}>{this.state.park}</div>;\n  }\n}\n\nexport default withStyles(useStyles)(Park);\n"]},"metadata":{},"sourceType":"module"}