{"ast":null,"code":"var _jsxFileName = \"/Users/jenplaza/Documents/SHARE/schoolProjects/jenPlaza_DVP5/parks2go/src/pages/stateParks.js\";\n// JavaScript Document\nimport React from 'react'; //Material UI\n\nimport Grid from \"@material-ui/core/Grid\";\nimport GridList from '@material-ui/core/GridList';\nimport Box from '@material-ui/core/Box'; //console.log(window.location.pathname);\n\nlet sCode = window.location.pathname;\nlet newSC = sCode.split('/stateParks/');\nnewSC.shift();\nconst parkId = newSC;\nconst activity = 'artsandculture';\nconst targetId = newSC;\nconst endpoint = `statecode=${targetId}`; //Smart Component\n\nclass StateParks extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      picListing: []\n    };\n  }\n\n  parkClick(event) {\n    window.onclick = event => {\n      //console.log(event.target);\n      //console.log(event.target.id);\n      var parkId = event.target.id;\n      window.location.assign(`http://localhost:3000/park/${parkId}`);\n    };\n  } //calling fetchData function\n\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  filterByActivity(current_value, i) {\n    for (let i = 0; i < current_value.activities.length; i++) {\n      let activity = current_value.activities[i];\n      if (activity.id == '7CE6E935-F839-4FEC-A63E-052B1DEF39D2') return true;\n    }\n\n    console.log(current_value);\n    return false;\n  } //fetching API\n\n\n  fetchData() {\n    fetch(`https://developer.nps.gov/api/v1/parks?${endpoint}&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq`).then(results => {\n      return results.json();\n    }).then(data => {\n      let filteredArray = data.data.filter(this.filterByActivity);\n      let mList = filteredArray.map((use, i) => {\n        return /*#__PURE__*/React.createElement(GridListTile, {\n          key: use.id,\n          cols: use.title || 1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 5\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          id: use.parkCode,\n          src: use.images[0].url,\n          alt: use.images[0].altText,\n          style: styles.indImgs,\n          onClick: this.parkClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 7\n          }\n        }));\n      });\n      this.setState({\n        StateParks: mList\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(GridList, {\n      cellHeight: auto,\n      style: styles.gridList,\n      cols: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 4\n      }\n    }, this.state.StateParks);\n  }\n\n}\n\nexport default StateParks;\nconst styles = {\n  item: {\n    columns: '3',\n    margin: '1%'\n  },\n  li: {\n    listStyleType: 'none'\n  },\n  indImgs: {\n    height: '100%',\n    width: '100%',\n    marginBottom: '5%'\n  },\n  h2: {\n    marginTop: '-20%',\n    paddingLeft: '3%',\n    color: 'white'\n  },\n  h5: {\n    marginTop: '-6%',\n    paddingLeft: '3%',\n    color: 'white'\n  }\n};","map":{"version":3,"sources":["/Users/jenplaza/Documents/SHARE/schoolProjects/jenPlaza_DVP5/parks2go/src/pages/stateParks.js"],"names":["React","Grid","GridList","Box","sCode","window","location","pathname","newSC","split","shift","parkId","activity","targetId","endpoint","StateParks","Component","state","picListing","parkClick","event","onclick","target","id","assign","componentDidMount","fetchData","filterByActivity","current_value","i","activities","length","console","log","fetch","then","results","json","data","filteredArray","filter","mList","map","use","title","parkCode","images","url","altText","styles","indImgs","setState","render","auto","gridList","item","columns","margin","li","listStyleType","height","width","marginBottom","h2","marginTop","paddingLeft","color","h5"],"mappings":"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","sourcesContent":["// JavaScript Document\nimport React from 'react';\n\n//Material UI\nimport Grid from \"@material-ui/core/Grid\";\nimport GridList from '@material-ui/core/GridList';\nimport Box from '@material-ui/core/Box';\n\n//console.log(window.location.pathname);\nlet sCode = window.location.pathname;\n let newSC = sCode.split('/stateParks/');\n newSC.shift();\nconst parkId = newSC;\n\nconst activity = 'artsandculture'\nconst targetId = newSC;\nconst endpoint = `statecode=${targetId}`;\n\n//Smart Component\nclass StateParks extends React.Component {\n\t//declaring state and new object\n\tstate ={\n\t\tpicListing: []\n\t}\n\nparkClick(event) {\n\twindow.onclick= event => {\n\t\t//console.log(event.target);\n\t\t//console.log(event.target.id);\n\t\t\n\t\tvar parkId = event.target.id;\n\t\twindow.location.assign(`http://localhost:3000/park/${parkId}`);\n\t};\n} \n\n//calling fetchData function\n\tcomponentDidMount(){\n\tthis.fetchData();\n}\n\nfilterByActivity(current_value, i){\n\n\t\t\tfor(let i=0; i< current_value.activities.length;i++ ) {\n\t\t\t\tlet activity = current_value.activities[i];\n\t\t\t\tif(activity.id =='7CE6E935-F839-4FEC-A63E-052B1DEF39D2')\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\tconsole.log(current_value);\n\t\treturn false;\n}\n\n//fetching API\n fetchData(){\n\tfetch(`https://developer.nps.gov/api/v1/parks?${endpoint}&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq`)\n\t\t.then(results =>{\n\t\treturn results.json();\n\t}).then(data =>{\n\t\t\n\t\tlet filteredArray = data.data.filter(this.filterByActivity);\n\t\t\n\t\tlet mList = filteredArray.map((use, i)=>{\n\t\t\treturn(\n\t\t\t\t\n    <GridListTile key={use.id} cols={use.title || 1}>\n      <img id={use.parkCode} src={use.images[0].url} alt={use.images[0].altText} style={styles.indImgs} onClick={this.parkClick}/>\n    </GridListTile>\n  \n\t\t\t)\n\t\t})\n\t\t\n\t\tthis.setState({StateParks:mList});\n\t})\n}\n\t render() { \n\t\t\n  return (\n\t  <GridList cellHeight={auto} style={styles.gridList} cols={3}>\n {this.state.StateParks}\n</GridList> \t\t\n  );\n }\n}\nexport default StateParks\n\nconst styles ={\n\titem:{\n\tcolumns:'3',\n\t\tmargin:'1%'\n\t},\n\tli:{\n\tlistStyleType:'none',\t\n\t},\n\tindImgs:{\n\theight: '100%',\n\twidth:'100%',\n\t\tmarginBottom:'5%',\n\t},\n\th2:{\n\t\tmarginTop:'-20%',\n\t\tpaddingLeft:'3%',\n\t\tcolor:'white',\n\t},\n\th5:{\n\t\tmarginTop:'-6%',\n\t\tpaddingLeft:'3%',\n\t\tcolor:'white',\n\t},\n}"]},"metadata":{},"sourceType":"module"}