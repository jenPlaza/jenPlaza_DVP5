{"ast":null,"code":"// JavaScript Document\nimport React from'react';//Material UI\nimport GridList from'@material-ui/core/GridList';import Grid from'@material-ui/core/Grid';import GridListTile from'@material-ui/core/GridListTile';import GridListTileBar from'@material-ui/core/GridListTileBar';import Inprogress from'../progress_indicator/inProgress';const endpoint='limit=3';//Smart Component\nclass ParkGridHome extends React.Component{constructor(){super(...arguments);//declaring state and new object\nthis.state={imageListing:[]};}parkClick(event){window.onclick=event=>{//console.log(event.target);\nvar parkId=event.target.id;window.location.assign(\"https://jenplaza.github.io/parks2go/park/\".concat(parkId));};}//calling fetchData function\ncomponentDidMount(){this.fetchData();}//fetching API\nfetchData(){this.setState({isLoading:true},()=>{fetch(\"https://developer.nps.gov/api/v1/parks?\\t\".concat(endpoint,\"&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq\")).then(results=>{return results.json();}).then(data=>{this.setState({isLoading:false,data:data.data});});});}render(){const{data,isLoading}=this.state;/*console.log(isLoading)*/ //testing: true\nif(isLoading){return/*#__PURE__*/React.createElement(Inprogress,null);}let newArray=data;/*console.log(newArray)*/ //testing: newArray = data\nif(newArray!=null){return/*#__PURE__*/React.createElement(Grid,{container:true},newArray.map((use,i)=>/*#__PURE__*/React.createElement(GridList,{key:i,cellHeight:325,style:styles.gridList},/*#__PURE__*/React.createElement(GridListTile,{cols:2},/*#__PURE__*/React.createElement(\"img\",{id:use.parkCode,src:use.images[0].url,alt:use.images[0].altText,onClick:this.parkClick}),/*#__PURE__*/React.createElement(GridListTileBar,{title:use.images[0].title,subtitle:/*#__PURE__*/React.createElement(\"span\",null,use.addresses[0].city,\", \",use.addresses[0].stateCode)})))));}return/*#__PURE__*/React.createElement(\"div\",null,this.state.ParkGridHome);}}export default ParkGridHome;const styles={gridList:{paddingBottom:'0.5%'}};","map":{"version":3,"names":["React","GridList","Grid","GridListTile","GridListTileBar","Inprogress","endpoint","ParkGridHome","Component","constructor","arguments","state","imageListing","parkClick","event","window","onclick","parkId","target","id","location","assign","concat","componentDidMount","fetchData","setState","isLoading","fetch","then","results","json","data","render","createElement","newArray","container","map","use","i","key","cellHeight","style","styles","gridList","cols","parkCode","src","images","url","alt","altText","onClick","title","subtitle","addresses","city","stateCode","paddingBottom"],"sources":["/Users/jenplaza/jpDocs/PROJECTS/Projects/schoolProjects/parks2go/parks2go/src/components/grids/parkGridHome.js"],"sourcesContent":["// JavaScript Document\nimport React from 'react';\n\n//Material UI\nimport GridList from '@material-ui/core/GridList';\nimport Grid from '@material-ui/core/Grid';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport Inprogress from '../progress_indicator/inProgress'\n\nconst endpoint = 'limit=3';\n\n//Smart Component\nclass ParkGridHome extends React.Component {\n\t//declaring state and new object\n\tstate ={\n\t\timageListing: []\n\t}\n\nparkClick(event) {\n\twindow.onclick= event => {\n\t\t//console.log(event.target);\n\t\t\n\t\tvar parkId = event.target.id;\n\t\twindow.location.assign(`https://jenplaza.github.io/parks2go/park/${parkId}`);\n\t};\n} \n\n//calling fetchData function\n\tcomponentDidMount(){\n\tthis.fetchData();\n}\n\n//fetching API\nfetchData(){\n\t\t\tthis.setState({ isLoading: true }, () => {\n\t\t\t\tfetch(`https://developer.nps.gov/api/v1/parks?\t${endpoint}&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq`)\n\t\t\t\t.then(results =>{\n\t\t\t\treturn results.json();\n\t\t\t\t}).then(data => {this.setState({\n\t\t\t\tisLoading:false,\n\t\t\t\tdata:data.data\n\t\t\t})\n\t\t})\n\t})\n}\n\n render(){\n\t\t const { data, isLoading } = this.state; \n\t\t \t/*console.log(isLoading)*///testing: true\n\t\t\t\n\t\t if(isLoading){\n            return <Inprogress />\n          }\n\t\t\t\n\t\t\tlet newArray = data;\n\t\t\t /*console.log(newArray)*/ //testing: newArray = data\n\t\t\t \n\t\t\tif (newArray != null) {\n        \t\treturn (\n\t\t\t\t<Grid container  >\n\t\t\t\t\t{newArray.map((use, i) =>\n\t\t\t\t<GridList key={i} cellHeight={325} style={styles.gridList}>\n\t\t\t\t<GridListTile cols={2} >\n\t\t\t\t\t<img id={use.parkCode} src={use.images[0].url} alt={use.images[0].altText} onClick={this.parkClick} />\n\t\t\t\t<GridListTileBar title={use.images[0].title} subtitle={<span>{use.addresses[0].city}, {use.addresses[0].stateCode}</span>} />\n\t\t\t\t</GridListTile>\t\n\t\t\t\t</GridList>\n\t\t\t\t\t)}\n            \t\t</Grid>\n        \t\t)}\n    \t\t\n  \t\treturn (\n \t\t\t\t<div>\n\t  \t\t\t\t{this.state.ParkGridHome}\t\n    \t\t\t</div>\n  \t\t\t\t);\n \t\t\t}\n\t\t}\nexport default ParkGridHome;\nconst styles ={\n\tgridList:{\n\t\tpaddingBottom:'0.5%',\n\t},\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}