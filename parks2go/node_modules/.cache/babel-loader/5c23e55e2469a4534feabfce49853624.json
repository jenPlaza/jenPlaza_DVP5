{"ast":null,"code":"import _classCallCheck from\"/Users/jenplaza/jpDocs/PROJECTS/Projects/schoolProjects/parks2go/parks2go/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jenplaza/jpDocs/PROJECTS/Projects/schoolProjects/parks2go/parks2go/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/jenplaza/jpDocs/PROJECTS/Projects/schoolProjects/parks2go/parks2go/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/jenplaza/jpDocs/PROJECTS/Projects/schoolProjects/parks2go/parks2go/node_modules/@babel/runtime/helpers/esm/inherits\";// JavaScript Document\nimport React from'react';//Material UI\nimport GridList from'@material-ui/core/GridList';import Grid from'@material-ui/core/Grid';import GridListTile from'@material-ui/core/GridListTile';import GridListTileBar from'@material-ui/core/GridListTileBar';import Inprogress from'../progress_indicator/inProgress';var endpoint='limit=3';//Smart Component\nvar ParkGridHome=/*#__PURE__*/function(_React$Component){_inherits(ParkGridHome,_React$Component);var _super=_createSuper(ParkGridHome);function ParkGridHome(){var _this;_classCallCheck(this,ParkGridHome);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={imageListing:[]};return _this;}_createClass(ParkGridHome,[{key:\"parkClick\",value:function parkClick(event){window.onclick=function(event){//console.log(event.target);\nvar parkId=event.target.id;window.location.assign(\"https://jenplaza.github.io/parks2go/park/\".concat(parkId));};}//calling fetchData function\n},{key:\"componentDidMount\",value:function componentDidMount(){this.fetchData();}//fetching API\n},{key:\"fetchData\",value:function fetchData(){var _this2=this;this.setState({isLoading:true},function(){fetch(\"https://developer.nps.gov/api/v1/parks?\\t\".concat(endpoint,\"&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq\")).then(function(results){return results.json();}).then(function(data){_this2.setState({isLoading:false,data:data.data});});});}},{key:\"render\",value:function render(){var _this3=this;var _this$state=this.state,data=_this$state.data,isLoading=_this$state.isLoading;/*console.log(isLoading)*/ //testing: true\nif(isLoading){return/*#__PURE__*/React.createElement(Inprogress,null);}var newArray=data;/*console.log(newArray)*/ //testing: newArray = data\nif(newArray!=null){return/*#__PURE__*/React.createElement(Grid,{container:true},newArray.map(function(use,i){return/*#__PURE__*/React.createElement(GridList,{key:i,cellHeight:325,style:styles.gridList},/*#__PURE__*/React.createElement(GridListTile,{cols:2},/*#__PURE__*/React.createElement(\"img\",{id:use.parkCode,src:use.images[0].url,alt:use.images[0].altText,onClick:_this3.parkClick}),/*#__PURE__*/React.createElement(GridListTileBar,{title:use.images[0].title,subtitle:/*#__PURE__*/React.createElement(\"span\",null,use.addresses[0].city,\", \",use.addresses[0].stateCode)})));}));}return/*#__PURE__*/React.createElement(\"div\",null,this.state.ParkGridHome);}}]);return ParkGridHome;}(React.Component);export default ParkGridHome;var styles={gridList:{paddingBottom:'0.5%'}};","map":{"version":3,"sources":["/Users/jenplaza/jpDocs/PROJECTS/Projects/schoolProjects/parks2go/parks2go/src/components/grids/parkGridHome.js"],"names":["React","GridList","Grid","GridListTile","GridListTileBar","Inprogress","endpoint","ParkGridHome","state","imageListing","event","window","onclick","parkId","target","id","location","assign","fetchData","setState","isLoading","fetch","then","results","json","data","newArray","map","use","i","styles","gridList","parkCode","images","url","altText","parkClick","title","addresses","city","stateCode","Component","paddingBottom"],"mappings":"gmBAAA;AACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA;AACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gCAAzB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mCAA5B,CACA,MAAOC,CAAAA,UAAP,KAAuB,kCAAvB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,SAAjB,CAEA;GACMC,CAAAA,Y,+VAELC,K,CAAO,CACNC,YAAY,CAAE,EADR,C,oFAIEC,K,CAAO,CAChBC,MAAM,CAACC,OAAP,CAAgB,SAAAF,KAAK,CAAI,CACxB;AAEA,GAAIG,CAAAA,MAAM,CAAGH,KAAK,CAACI,MAAN,CAAaC,EAA1B,CACAJ,MAAM,CAACK,QAAP,CAAgBC,MAAhB,oDAAmEJ,MAAnE,GACA,CALD,CAMA,CAED;6DACoB,CACnB,KAAKK,SAAL,GACA,CAED;6CACW,iBACR,KAAKC,QAAL,CAAc,CAAEC,SAAS,CAAE,IAAb,CAAd,CAAmC,UAAM,CACxCC,KAAK,oDAA4Cf,QAA5C,sDAAL,CACCgB,IADD,CACM,SAAAC,OAAO,CAAG,CAChB,MAAOA,CAAAA,OAAO,CAACC,IAAR,EAAP,CACC,CAHD,EAGGF,IAHH,CAGQ,SAAAG,IAAI,CAAI,CAAC,MAAI,CAACN,QAAL,CAAc,CAC/BC,SAAS,CAAC,KADqB,CAE/BK,IAAI,CAACA,IAAI,CAACA,IAFqB,CAAd,EAIlB,CAPC,EAQF,CATC,EAUF,C,uCAEQ,iCACsB,KAAKjB,KAD3B,CACEiB,IADF,aACEA,IADF,CACQL,SADR,aACQA,SADR,CAEL,0BAFK,CAEqB;AAE3B,GAAGA,SAAH,CAAa,CACJ,mBAAO,oBAAC,UAAD,MAAP,CACD,CAER,GAAIM,CAAAA,QAAQ,CAAGD,IAAf,CACC,yBATK,CASqB;AAE3B,GAAIC,QAAQ,EAAI,IAAhB,CAAsB,CACf,mBACN,oBAAC,IAAD,EAAM,SAAS,KAAf,EACEA,QAAQ,CAACC,GAAT,CAAa,SAACC,GAAD,CAAMC,CAAN,qBACf,oBAAC,QAAD,EAAU,GAAG,CAAEA,CAAf,CAAkB,UAAU,CAAE,GAA9B,CAAmC,KAAK,CAAEC,MAAM,CAACC,QAAjD,eACA,oBAAC,YAAD,EAAc,IAAI,CAAE,CAApB,eACC,2BAAK,EAAE,CAAEH,GAAG,CAACI,QAAb,CAAuB,GAAG,CAAEJ,GAAG,CAACK,MAAJ,CAAW,CAAX,EAAcC,GAA1C,CAA+C,GAAG,CAAEN,GAAG,CAACK,MAAJ,CAAW,CAAX,EAAcE,OAAlE,CAA2E,OAAO,CAAE,MAAI,CAACC,SAAzF,EADD,cAEA,oBAAC,eAAD,EAAiB,KAAK,CAAER,GAAG,CAACK,MAAJ,CAAW,CAAX,EAAcI,KAAtC,CAA6C,QAAQ,cAAE,gCAAOT,GAAG,CAACU,SAAJ,CAAc,CAAd,EAAiBC,IAAxB,MAAgCX,GAAG,CAACU,SAAJ,CAAc,CAAd,EAAiBE,SAAjD,CAAvD,EAFA,CADA,CADe,EAAb,CADF,CADM,CAWE,CAER,mBACC,+BACG,KAAKhC,KAAL,CAAWD,YADd,CADD,CAKC,C,0BAhEsBP,KAAK,CAACyC,S,EAkEjC,cAAelC,CAAAA,YAAf,CACA,GAAMuB,CAAAA,MAAM,CAAE,CACbC,QAAQ,CAAC,CACRW,aAAa,CAAC,MADN,CADI,CAAd","sourcesContent":["// JavaScript Document\nimport React from 'react';\n\n//Material UI\nimport GridList from '@material-ui/core/GridList';\nimport Grid from '@material-ui/core/Grid';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport Inprogress from '../progress_indicator/inProgress'\n\nconst endpoint = 'limit=3';\n\n//Smart Component\nclass ParkGridHome extends React.Component {\n\t//declaring state and new object\n\tstate ={\n\t\timageListing: []\n\t}\n\nparkClick(event) {\n\twindow.onclick= event => {\n\t\t//console.log(event.target);\n\t\t\n\t\tvar parkId = event.target.id;\n\t\twindow.location.assign(`https://jenplaza.github.io/parks2go/park/${parkId}`);\n\t};\n} \n\n//calling fetchData function\n\tcomponentDidMount(){\n\tthis.fetchData();\n}\n\n//fetching API\nfetchData(){\n\t\t\tthis.setState({ isLoading: true }, () => {\n\t\t\t\tfetch(`https://developer.nps.gov/api/v1/parks?\t${endpoint}&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq`)\n\t\t\t\t.then(results =>{\n\t\t\t\treturn results.json();\n\t\t\t\t}).then(data => {this.setState({\n\t\t\t\tisLoading:false,\n\t\t\t\tdata:data.data\n\t\t\t})\n\t\t})\n\t})\n}\n\n render(){\n\t\t const { data, isLoading } = this.state; \n\t\t \t/*console.log(isLoading)*///testing: true\n\t\t\t\n\t\t if(isLoading){\n            return <Inprogress />\n          }\n\t\t\t\n\t\t\tlet newArray = data;\n\t\t\t /*console.log(newArray)*/ //testing: newArray = data\n\t\t\t \n\t\t\tif (newArray != null) {\n        \t\treturn (\n\t\t\t\t<Grid container  >\n\t\t\t\t\t{newArray.map((use, i) =>\n\t\t\t\t<GridList key={i} cellHeight={325} style={styles.gridList}>\n\t\t\t\t<GridListTile cols={2} >\n\t\t\t\t\t<img id={use.parkCode} src={use.images[0].url} alt={use.images[0].altText} onClick={this.parkClick} />\n\t\t\t\t<GridListTileBar title={use.images[0].title} subtitle={<span>{use.addresses[0].city}, {use.addresses[0].stateCode}</span>} />\n\t\t\t\t</GridListTile>\t\n\t\t\t\t</GridList>\n\t\t\t\t\t)}\n            \t\t</Grid>\n        \t\t)}\n    \t\t\n  \t\treturn (\n \t\t\t\t<div>\n\t  \t\t\t\t{this.state.ParkGridHome}\t\n    \t\t\t</div>\n  \t\t\t\t);\n \t\t\t}\n\t\t}\nexport default ParkGridHome;\nconst styles ={\n\tgridList:{\n\t\tpaddingBottom:'0.5%',\n\t},\n};"]},"metadata":{},"sourceType":"module"}