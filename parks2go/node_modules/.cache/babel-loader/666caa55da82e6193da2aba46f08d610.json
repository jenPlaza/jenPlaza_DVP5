{"ast":null,"code":"var _jsxFileName = \"/Users/jenplaza/Documents/SHARE/schoolProjects/jenPlaza_DVP5/parks2go/src/pages/stateParks.js\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = theme => ({\n  root: {\n    //display: 'flex',\n    //flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: 'rgb(15,15,15,0.4)',\n    border: '3px solid red'\n  },\n  gridList: {\n    width: '25%',\n    height: '25%',\n    border: '3px solid yellow'\n  },\n  box: {\n    //columns:'3',\n    border: '3px solid green'\n  },\n  li: {\n    listStyleType: 'none',\n    border: '3px solid orange'\n  },\n  indImgs: {\n    height: '100%',\n    width: '100%',\n    border: '3px solid pink'\n  }\n}); //console.log(window.location.pathname);\n\n\nlet sCode = window.location.pathname;\nlet newSC = sCode.split('/stateParks/');\nnewSC.shift();\nconst parkId = newSC;\nconst activity = 'artsandculture';\nconst targetId = newSC;\nconst endpoint = `statecode=${targetId}`; //Smart Component\n\nclass StateParks extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      picListing: []\n    };\n  }\n\n  parkClick(event) {\n    window.onclick = event => {\n      //console.log(event.target);\n      var parkId = event.target.id;\n      window.location.assign(`http://localhost:3000/park/${parkId}`);\n    };\n  } //calling fetchData function\n\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  filterByActivity(current_value, i) {\n    for (let i = 0; i < current_value.activities.length; i++) {\n      let activity = current_value.activities[i];\n      if (activity.id == '7CE6E935-F839-4FEC-A63E-052B1DEF39D2') return true;\n    } //console.log(current_value);\n\n\n    return false;\n  } //fetching API\n\n\n  fetchData() {\n    /* const classes = useStyles();\n    fetch(`https://developer.nps.gov/api/v1/parks?${endpoint}&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq`)\n    \t.then(results =>{\n    \treturn results.json();\n    }).then(data =>{\n    \t\n    \tlet filteredArray = data.data.filter(this.filterByActivity);\n    \t\n    \tlet mList = filteredArray.map((use, i)=>\n    \t{\n    \t\treturn(\t\n    \t\t\t<div>\n    <GridList >\n           <GridListTile >\n    \t\t\t<img id={use.parkCode} src={use.images[0].url} alt={use.images[0].altText} className={classes.indImgs} onClick={this.parkClick}/>\n               \t<GridListTileBar title={use.images[0].title} subtitle={<span>{use.addresses[0].city}, {use.addresses[0].stateCode}</span>} />\n    \t</GridListTile>\t\t\n         </GridList>\n    \t\t\t</div>\n    \t\t)})\n    \tthis.setState({StateParks:mList});\n    })*/\n  }\n\n  render() {\n    const classes = useStyles();\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.box,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }\n    }, this.state.StateParks));\n  }\n\n}\n\nexport default withStyles(useStyles)(StateParks);","map":{"version":3,"sources":["/Users/jenplaza/Documents/SHARE/schoolProjects/jenPlaza_DVP5/parks2go/src/pages/stateParks.js"],"names":["React","withStyles","GridList","GridListTile","GridListTileBar","Grid","useStyles","theme","root","justifyContent","overflow","backgroundColor","border","gridList","width","height","box","li","listStyleType","indImgs","sCode","window","location","pathname","newSC","split","shift","parkId","activity","targetId","endpoint","StateParks","Component","state","picListing","parkClick","event","onclick","target","id","assign","componentDidMount","fetchData","filterByActivity","current_value","i","activities","length","render","classes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\n\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = theme => ({\nroot: {\n    //display: 'flex',\n    //flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: 'rgb(15,15,15,0.4)',\n\tborder:'3px solid red',\n  },\ngridList: {\n    width: '25%',\n    height: '25%',\n\tborder:'3px solid yellow',\n  },\nbox:{\n\t//columns:'3',\n\tborder:'3px solid green',\n\t},\nli:{\n\tlistStyleType:'none',\t\n\tborder:'3px solid orange',\n\t},\nindImgs:{\n\theight: '100%',\n\twidth:'100%',\n\tborder:'3px solid pink',\n\t},\n});\n\n//console.log(window.location.pathname);\nlet sCode = window.location.pathname;\n let newSC = sCode.split('/stateParks/');\n newSC.shift();\nconst parkId = newSC;\n\nconst activity = 'artsandculture'\nconst targetId = newSC;\nconst endpoint = `statecode=${targetId}`;\n\n//Smart Component\nclass StateParks extends React.Component {\n\t//declaring state and new object\n\tstate ={\n\t\tpicListing: []\n\t}\n\nparkClick(event) {\n\twindow.onclick= event => {\n\t\t//console.log(event.target);\n\t\t\n\t\tvar parkId = event.target.id;\n\t\twindow.location.assign(`http://localhost:3000/park/${parkId}`);\n\t};\n} \n\n//calling fetchData function\n\tcomponentDidMount(){\n\tthis.fetchData();\n}\n\nfilterByActivity(current_value, i){\n\t\t\t\n\t\t\tfor(let i=0; i< current_value.activities.length;i++ ) {\n\t\t\t\tlet activity = current_value.activities[i];\n\t\t\t\tif(activity.id =='7CE6E935-F839-4FEC-A63E-052B1DEF39D2')\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\t//console.log(current_value);\n\t\treturn false;\n}\n\n//fetching API\n fetchData(){\n\t/* const classes = useStyles();\n\tfetch(`https://developer.nps.gov/api/v1/parks?${endpoint}&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq`)\n\t\t.then(results =>{\n\t\treturn results.json();\n\t}).then(data =>{\n\t\t\n\t\tlet filteredArray = data.data.filter(this.filterByActivity);\n\t\t\n\t\tlet mList = filteredArray.map((use, i)=>\n\t\t{\n\t\t\treturn(\t\n\t\t\t\t<div>\n\t<GridList >\n        <GridListTile >\n\t\t\t\t<img id={use.parkCode} src={use.images[0].url} alt={use.images[0].altText} className={classes.indImgs} onClick={this.parkClick}/>\n            \t<GridListTileBar title={use.images[0].title} subtitle={<span>{use.addresses[0].city}, {use.addresses[0].stateCode}</span>} />\n\t\t</GridListTile>\t\t\n      </GridList>\n\t\t\t\t</div>\n\t\t\t)})\n\t\tthis.setState({StateParks:mList});\n\t})*/\n}\n\t render() { \n\t\t const classes = useStyles();\n  return (\n<Grid container>\n\t   <Grid item xs={12} className={classes.box}>\n\t{this.state.StateParks}\n\t  </Grid>\n       </Grid>\t\t\n  );\n }\n}\nexport default withStyles(useStyles)(StateParks);"]},"metadata":{},"sourceType":"module"}