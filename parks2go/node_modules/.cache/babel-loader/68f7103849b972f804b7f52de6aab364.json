{"ast":null,"code":"var _jsxFileName = \"/Users/jenplaza/Documents/SHARE/schoolProjects/jenPlaza_DVP5/parks2go/src/pages/stateParks.js\";\n// JavaScript Document\nimport React from 'react';\nimport Inprogress from '../components/progress_indicator/inProgress'; //Material UI\n\nimport { makeStyles } from '@material-ui/styles';\nimport GridList from '@material-ui/core/GridList';\nimport Grid from '@material-ui/core/Grid';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar'; //import LinearProgress from '@material-ui/core/LinearProgress';\n//console.log(window.location.pathname);\n\nlet sCode = window.location.pathname;\nlet newSC = sCode.split('/stateParks/');\nnewSC.shift();\nconst targetId = newSC;\nconst endpoint = `statecode=${targetId}`; //Smart Component\n\nclass StateParks extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      picListing: [],\n      isLoading: false\n    };\n  }\n\n  parkClick(event) {\n    window.onclick = event => {\n      //console.log(event.target);\n      var parkId = event.target.id;\n      window.location.assign(`http://localhost:3000/park/${parkId}`);\n    };\n  } //calling fetchData function\n\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  filterByActivity(current_value, i) {\n    for (let i = 0; i < current_value.activities.length; i++) {\n      let activity = current_value.activities[i];\n      if (activity.id === '7CE6E935-F839-4FEC-A63E-052B1DEF39D2') return true;\n    } //console.log(current_value);\n\n\n    return false;\n  } //fetching API\n\n\n  fetchData(props) {\n    const classes = useStyles();\n    this.setState({\n      isLoading: true\n    }, () => {\n      fetch(`https://developer.nps.gov/api/v1/parks?${endpoint}&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq`).then(results => {\n        //console.log(isLoading)\n        return results.json();\n      }).then(data => {\n        //let isLoading = false\n        let filteredArray = data.data.filter(this.filterByActivity);\n        let {\n          isLoading\n        } = false;\n        console.log(isLoading);\n        let mList = filteredArray.map((use, i) => {\n          const {\n            isLoading\n          } = this.state;\n          console.log(isLoading);\n          return /*#__PURE__*/React.createElement(GridList, {\n            key: i,\n            style: styles.gridList,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 5\n            }\n          }, /*#__PURE__*/React.createElement(GridListTile, {\n            style: styles.paper,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 5\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            key: use.images[0].id,\n            id: use.parkCode,\n            src: use.images[0].url,\n            alt: use.images[0].altText,\n            style: styles.indImgs,\n            onClick: this.parkClick,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 5\n            }\n          }), /*#__PURE__*/React.createElement(GridListTileBar, {\n            title: use.images[0].title,\n            subtitle: /*#__PURE__*/React.createElement(\"span\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 60\n              }\n            }, use.addresses[0].city, \", \", use.addresses[0].stateCode),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 5\n            }\n          })));\n        });\n        this.setState({\n          StateParks: mList\n        });\n      });\n    });\n  }\n\n  render() {\n    const classes = useStyles();\n    const {\n      isLoading\n    } = this.state; //let {isLoading} = this.state;\n\n    console.log(isLoading);\n\n    if (isLoading) {\n      console.log(isLoading);\n      return /*#__PURE__*/React.createElement(Inprogress, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }, this.state.StateParks));\n  }\n\n}\n\nexport default StateParks;\nconst styles = {\n  root: {\n    direction: 'row',\n    flexGrow: '1'\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden'\n  },\n  gridList: {\n    paddingBottom: '0.2%'\n  },\n  paper: {\n    textAlign: 'center',\n    width: '399px',\n    height: '299px',\n    backgroundColor: 'rgb(15,15,15,0.4)',\n    listStyleType: 'none',\n    backgroundColor: 'white'\n  },\n  indImgs: {\n    height: '100%',\n    width: '100%'\n  }\n};\n\nconst useStyles = theme => ({\n  /*root:{\n  \tdirection:'row',\n  \tflexGrow:'1',\n  \tmargin:'1%',\n  \t},\n  container:{\n      display: 'flex',\n  \t flexWrap: 'wrap',\n  \tmarginBottom:'-2%',\n  \t},\n  gridList: {\n  \tjustifyContent: 'space-around',\n  \tmargin:'0.5%',\n    },\n  paper: { \n      textAlign: 'center',\n  \t\twidth:'380px',\n  \t\theight: '280px',\n  \t\tbackgroundColor: 'rgb(15,15,15,0.4)',\n  \t\tlistStyleType:'none',\n    },\n  indImgs:{\n  \theight: '100%',\n  \twidth:'100%',\n  \t},*/\n});","map":{"version":3,"sources":["/Users/jenplaza/Documents/SHARE/schoolProjects/jenPlaza_DVP5/parks2go/src/pages/stateParks.js"],"names":["React","Inprogress","makeStyles","GridList","Grid","GridListTile","GridListTileBar","sCode","window","location","pathname","newSC","split","shift","targetId","endpoint","StateParks","Component","state","picListing","isLoading","parkClick","event","onclick","parkId","target","id","assign","componentDidMount","fetchData","filterByActivity","current_value","i","activities","length","activity","props","classes","useStyles","setState","fetch","then","results","json","data","filteredArray","filter","console","log","mList","map","use","styles","gridList","paper","images","parkCode","url","altText","indImgs","title","addresses","city","stateCode","render","root","container","direction","flexGrow","display","flexWrap","justifyContent","overflow","paddingBottom","textAlign","width","height","backgroundColor","listStyleType","theme"],"mappings":"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","sourcesContent":["// JavaScript Document\nimport React from 'react';\nimport Inprogress from '../components/progress_indicator/inProgress'\n\n//Material UI\nimport {makeStyles} from '@material-ui/styles';\nimport GridList from '@material-ui/core/GridList';\nimport Grid from '@material-ui/core/Grid';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\n\n//import LinearProgress from '@material-ui/core/LinearProgress';\n\n//console.log(window.location.pathname);\nlet sCode = window.location.pathname;\n let newSC = sCode.split('/stateParks/');\n newSC.shift();\n\nconst targetId = newSC;\nconst endpoint = `statecode=${targetId}`;\n\n//Smart Component\nclass StateParks extends React.Component {\n\t//declaring state and new object\n\tstate ={\n\t\tpicListing: [],\n\t\tisLoading: false,\n\t}\n\nparkClick(event) {\n\twindow.onclick= event => {\n\t\t//console.log(event.target);\n\t\t\n\t\tvar parkId = event.target.id;\n\t\twindow.location.assign(`http://localhost:3000/park/${parkId}`);\n\t};\n} \n\n//calling fetchData function\n\tcomponentDidMount( ){\n\t\t\n\tthis.fetchData();\n}\n\nfilterByActivity(current_value, i){\n\t\t\t\n\t\t\tfor(let i=0; i< current_value.activities.length;i++ ) {\n\t\t\t\tlet activity = current_value.activities[i];\n\t\t\t\tif(activity.id ==='7CE6E935-F839-4FEC-A63E-052B1DEF39D2')\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\t//console.log(current_value);\n\t\treturn false;\n}\n\n//fetching API\n fetchData(props){\n\t const classes = useStyles();\n\t\n\tthis.setState({ isLoading: true }, () => {\n\n\tfetch(`https://developer.nps.gov/api/v1/parks?${endpoint}&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq`)\n\t\t.then(results => {\n\t\t\n\t//console.log(isLoading)\n\t\treturn results.json();\n\t}).then(data => {\n\n\t\t//let isLoading = false\n\t\t\n\t\tlet filteredArray = data.data.filter(this.filterByActivity);\n\t\n\t\t let {isLoading} = false\n\t\tconsole.log(isLoading)\n\t\t\n\t\tlet mList = filteredArray.map((use, i)=>{\n\t\t\tconst { isLoading } = this.state; \n\t\t\tconsole.log(isLoading)\n\t\t\t\n\t\t\treturn(\n\t\t\t\t\n\t\t\t\t<GridList key={i} style={styles.gridList}>\n\t\t\t\t<GridListTile style={styles.paper}>\n\t\t\t\t<img key={use.images[0].id} id={use.parkCode} src={use.images[0].url} alt={use.images[0].altText} style={styles.indImgs} onClick={this.parkClick}/>\n\t\t\t\t<GridListTileBar title={use.images[0].title} subtitle={<span>{use.addresses[0].city}, {use.addresses[0].stateCode}</span>} />\n\t\t\t\t</GridListTile>\t\n\t\t\t\t</GridList>\n\t\t\t)\n\t\t})\n\t\t\n\t\tthis.setState({StateParks:mList} );\n\t})\n\t})\n}\n\n\t\t\t\t   \n\t render() { \n\t\t const classes = useStyles();\n\t\t const { isLoading } = this.state; \n\t\t //let {isLoading} = this.state;\n\t\t console.log(isLoading)\n\t\t if(isLoading){\n\t\t\t\n\t\t\t console.log(isLoading)\n            return <Inprogress />\n          } \n  return (\n\t  <div style={styles.root}>\n\t  \n      <Grid container style={styles.container}>\n\t  \n\t \n\t \n\t  \t\t{this.state.StateParks}\n\t  \n     </Grid>\n    </div>\n  );\n }\n}\nexport default StateParks\n\nconst styles ={\nroot:{\n\tdirection:'row',\n\tflexGrow:'1',\n\t},\ncontainer:{\n    display: 'flex',\n\t flexWrap: 'wrap',\n\tjustifyContent: 'space-around',\n\toverflow: 'hidden',\n\t},\ngridList: {\n\tpaddingBottom:'0.2%',\n  },\npaper: { \n    textAlign: 'center',\n\t\twidth:'399px',\n\t\theight: '299px',\n\t\tbackgroundColor: 'rgb(15,15,15,0.4)',\n\t\tlistStyleType:'none',\n\t\tbackgroundColor:'white',\n  },\nindImgs:{\n\theight: '100%',\n\twidth:'100%',\n\t},\n\t \n}\n\nconst useStyles = theme => ({\n/*root:{\n\tdirection:'row',\n\tflexGrow:'1',\n\tmargin:'1%',\n\t},\ncontainer:{\n    display: 'flex',\n\t flexWrap: 'wrap',\n\tmarginBottom:'-2%',\n\t},\ngridList: {\n\tjustifyContent: 'space-around',\n\tmargin:'0.5%',\n  },\npaper: { \n    textAlign: 'center',\n\t\twidth:'380px',\n\t\theight: '280px',\n\t\tbackgroundColor: 'rgb(15,15,15,0.4)',\n\t\tlistStyleType:'none',\n  },\nindImgs:{\n\theight: '100%',\n\twidth:'100%',\n\t},*/\n});"]},"metadata":{},"sourceType":"module"}