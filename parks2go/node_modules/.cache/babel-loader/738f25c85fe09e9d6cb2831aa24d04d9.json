{"ast":null,"code":"import _classCallCheck from\"/Users/jenplaza/Documents/SHARE/schoolProjects/jenPlaza_DVP5/parks2go/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jenplaza/Documents/SHARE/schoolProjects/jenPlaza_DVP5/parks2go/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/jenplaza/Documents/SHARE/schoolProjects/jenPlaza_DVP5/parks2go/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/jenplaza/Documents/SHARE/schoolProjects/jenPlaza_DVP5/parks2go/node_modules/@babel/runtime/helpers/esm/inherits\";// JavaScript Document\nimport React from'react';import Inprogress from'../components/progress_indicator/inProgress';//Material UI\nimport GridList from'@material-ui/core/GridList';import Grid from'@material-ui/core/Grid';import GridListTile from'@material-ui/core/GridListTile';import GridListTileBar from'@material-ui/core/GridListTileBar';var stCode=window.location.pathname;var newStC=stCode.split('/');var actCd=newStC.slice(3);var stateCd=newStC.slice(2,3);var activityId=actCd;var targetId=stateCd;var endpoint=\"statecode=\".concat(targetId);//Smart Component\nvar StateParks=/*#__PURE__*/function(_React$Component){_inherits(StateParks,_React$Component);var _super=_createSuper(StateParks);function StateParks(){var _this;_classCallCheck(this,StateParks);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={picListing:[],isLoading:false};return _this;}_createClass(StateParks,[{key:\"parkClick\",value:function parkClick(event){window.onclick=function(event){//console.log(event.target);\nvar parkId=event.target.id;window.location.assign(\"http://localhost:3000/park/\".concat(parkId));};}//calling fetchData function\n},{key:\"componentDidMount\",value:function componentDidMount(){this.fetchData();}},{key:\"filterByActivity\",value:function filterByActivity(current_value,i){for(var _i=0;_i<current_value.activities.length;_i++){var activity=current_value.activities[_i];if(activity.id===\"\".concat(activityId))return true;}return false;}//fetching API\n},{key:\"fetchData\",value:function fetchData(){var _this2=this;this.setState({isLoading:true},function(){fetch(\"https://developer.nps.gov/api/v1/parks?\".concat(endpoint,\"&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq\")).then(function(results){return results.json();}).then(function(data){_this2.setState({isLoading:false,data:data.data});var filteredArray=data.data.filter(_this2.filterByActivity);var mList=filteredArray.map(function(use,i){return/*#__PURE__*/React.createElement(GridList,{key:i,style:styles.gridList},/*#__PURE__*/React.createElement(GridListTile,{style:styles.paper},/*#__PURE__*/React.createElement(\"img\",{id:use.parkCode,src:use.images[0].url,alt:use.images[0].altText,onClick:_this2.parkClick}),/*#__PURE__*/React.createElement(GridListTileBar,{title:use.images[0].title,subtitle:/*#__PURE__*/React.createElement(\"span\",null,use.addresses[0].city,\", \",use.addresses[0].stateCode)})));});_this2.setState({StateParks:mList});});});}},{key:\"render\",value:function render(){var isLoading=this.state.isLoading;if(isLoading){return/*#__PURE__*/React.createElement(Inprogress,null);}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Grid,{container:true,style:styles.container},this.state.StateParks));}}]);return StateParks;}(React.Component);export default StateParks;var styles={container:{justifyContent:'center'},gridList:{padding:'0.1%'},paper:{width:'428px',height:'328px',listStyleType:'none',backgroundColor:'white'}};","map":{"version":3,"sources":["/Users/jenplaza/Documents/SHARE/schoolProjects/jenPlaza_DVP5/parks2go/src/pages/stateParks.js"],"names":["React","Inprogress","GridList","Grid","GridListTile","GridListTileBar","stCode","window","location","pathname","newStC","split","actCd","slice","stateCd","activityId","targetId","endpoint","StateParks","state","picListing","isLoading","event","onclick","parkId","target","id","assign","fetchData","current_value","i","activities","length","activity","setState","fetch","then","results","json","data","filteredArray","filter","filterByActivity","mList","map","use","styles","gridList","paper","parkCode","images","url","altText","parkClick","title","addresses","city","stateCode","container","Component","justifyContent","padding","width","height","listStyleType","backgroundColor"],"mappings":"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","sourcesContent":["// JavaScript Document\nimport React from 'react';\nimport Inprogress from '../components/progress_indicator/inProgress'\n\n//Material UI\nimport GridList from '@material-ui/core/GridList';\nimport Grid from '@material-ui/core/Grid';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\n\nlet stCode = window.location.pathname;\nlet newStC = stCode.split('/');\n\nvar actCd = newStC.slice(3);\n\nvar stateCd = newStC.slice(2,3);\n\nconst activityId = actCd;\nconst targetId = stateCd;\nconst endpoint = `statecode=${targetId}`;\n\n//Smart Component\nclass StateParks extends React.Component {\n\t//declaring state and new object\n\tstate ={\n\t\tpicListing: [],\n\t\tisLoading: false,\n\t}\n\nparkClick(event) {\n\twindow.onclick= event => {\n\t\t//console.log(event.target);\n\t\t\n\t\tvar parkId = event.target.id;\n\t\twindow.location.assign(`http://localhost:3000/park/${parkId}`);\n\t};\n} \n\n//calling fetchData function\n\tcomponentDidMount(){\n\tthis.fetchData();\n}\n\nfilterByActivity(current_value, i){\n\t\t\t\n\t\t\tfor(let i=0; i< current_value.activities.length;i++ ) {\n\t\t\t\tlet activity = current_value.activities[i];\n\t\t\t\tif(activity.id === `${activityId}`)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\treturn false;\n}\n\n//fetching API\n fetchData(){\n\tthis.setState({ isLoading: true }, () => {\n\tfetch(`https://developer.nps.gov/api/v1/parks?${endpoint}&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq`)\n\t\t.then(results =>{\n\t\treturn results.json();\n\t}).then(data =>{this.setState({\n\t\t\t\tisLoading:false,\n\t\t\t\tdata:data.data\n\t\t\t})\n\t\t\n\t\tlet filteredArray = data.data.filter(this.filterByActivity);\n\t\t\n\t\tlet mList = filteredArray.map((use, i)=>{\n\t\t\treturn(\n\t\t\t\t<GridList key={i} style={styles.gridList}>\n\t\t\t\t<GridListTile style={styles.paper}>\n\t\t\t\t<img id={use.parkCode} src={use.images[0].url} alt={use.images[0].altText}  onClick={this.parkClick}/>\n\t\t\t\t<GridListTileBar title={use.images[0].title} subtitle={<span>{use.addresses[0].city}, {use.addresses[0].stateCode}</span>} />\n\t\t\t\t</GridListTile>\t\n\t\t\t\t</GridList>\n\t\t\t)\n\t\t})\n\t\t\tthis.setState({StateParks:mList});\n\t\t})\n\t})\n}\n\t render() { \n\t\t  const { isLoading } = this.state;  \n\t\t if(isLoading)\n\t\t {return <Inprogress />}\n\t\t \n  return (\n\t  <div>\n      <Grid container style={styles.container}>\n\t  \t{this.state.StateParks}\n     </Grid>\n    </div>\n  );\n }\n}\nexport default StateParks;\n\nconst styles = {\n\tcontainer:{\n\t\tjustifyContent:'center'\n\t},\ngridList: {\n\tpadding:'0.1%',\n  },\npaper: { \n\t\twidth:'428px',\n\t\theight: '328px',\n\t\tlistStyleType:'none',\n\t\tbackgroundColor:'white',\n},\n}"]},"metadata":{},"sourceType":"module"}