{"ast":null,"code":"var _jsxFileName = \"/Users/jenplaza/Documents/schoolProjects/jenPlaza_DVP5/parks2go/src/pages/ParkGridStateParks.js\";\n// JavaScript Document\nimport React from 'react'; //Material UI\n\nimport Link from '@material-ui/core/Link';\nimport Grid from \"@material-ui/core/Grid\";\nlet sCode = window.location.pathname;\nlet newSC = sCode.split('/StateParks/');\nnewSC.shift();\nconst targetId = newSC;\nconst endpoint = `stateCode=${targetId}&limit=2`; //Smart Component\n\nclass ParkGridStateParks extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      parkListing: []\n    };\n  }\n\n  //calling fetchData function\n  componentDidMount() {\n    this.fetchParks();\n  } //fetching API\n\n\n  fetchParks() {\n    fetch(`https://developer.nps.gov/api/v1/parks?${endpoint}&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq`).then(results => {\n      return results.json();\n    }).then(data => {\n      let mList = data.data.map((use, i) => {\n        var parkId = use.parkCode;\n        console.log(parkId);\n        return /*#__PURE__*/React.createElement(Link, {\n          key: i,\n          href: \"/StateParks/NY\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 5\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          id: use.parkCode,\n          src: use.images[1].url,\n          alt: use.images[1].altText,\n          style: {\n            width: '100%'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 5\n          }\n        }), /*#__PURE__*/React.createElement(\"h2\", {\n          style: styles.h2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 5\n          }\n        }, use.name), /*#__PURE__*/React.createElement(\"h3\", {\n          style: styles.h3,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 5\n          }\n        }, use.addresses[1].city, \", \", use.addresses[1].stateCode));\n      });\n      this.setState({\n        ParkGridStateParks: mList\n      });\n    });\n  }\n\n  parkHandler(event) {\n    var parkId = event.target.nodeName;\n    console.log(\"id: \" + parkId);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: styles.h1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 6\n      }\n    }, targetId, \" State National Parks\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      onClick: this.parkHandler(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 8\n      }\n    }))), this.state.ParkGridStateParks);\n  }\n\n}\n\nexport default ParkGridStateParks;\nconst styles = {\n  h1: {\n    textAlign: 'center'\n  },\n  h2: {\n    marginTop: '-8%',\n    color: 'white'\n  },\n  h3: {\n    marginTop: '-2%',\n    color: 'white'\n  }\n};","map":{"version":3,"sources":["/Users/jenplaza/Documents/schoolProjects/jenPlaza_DVP5/parks2go/src/pages/ParkGridStateParks.js"],"names":["React","Link","Grid","sCode","window","location","pathname","newSC","split","shift","targetId","endpoint","ParkGridStateParks","Component","state","parkListing","componentDidMount","fetchParks","fetch","then","results","json","data","mList","map","use","i","parkId","parkCode","console","log","images","url","altText","width","styles","h2","name","h3","addresses","city","stateCode","setState","parkHandler","event","target","nodeName","render","h1","textAlign","marginTop","color"],"mappings":"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","sourcesContent":["// JavaScript Document\nimport React from 'react';\n\n//Material UI\nimport Link from '@material-ui/core/Link';\nimport Grid from \"@material-ui/core/Grid\";\n\n let sCode = window.location.pathname;\n let newSC = sCode.split('/StateParks/');\n newSC.shift();\n\nconst targetId = newSC;\nconst endpoint = `stateCode=${targetId}&limit=2`;\n\n\n//Smart Component\nclass ParkGridStateParks extends React.Component {\n\t//declaring state and new object\n\tstate ={\n\t\tparkListing: [],\n\t}\n\n\n\n//calling fetchData function\n\tcomponentDidMount(){\n\tthis.fetchParks();\n}\n\n//fetching API\n fetchParks(){\n\tfetch(`https://developer.nps.gov/api/v1/parks?${endpoint}&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq`)\n\t\t.then(results =>{\n\t\treturn results.json();\n\t}).then(data =>{\n\n\t\tlet mList = data.data.map((use, i)=>{\n\t\t\tvar parkId = use.parkCode\n\t\t\tconsole.log(parkId);\n\t\t\treturn(\n\t\t\t\t<Link key={i} href='/StateParks/NY'>\n\t\t\t\t<img id={use.parkCode} src={use.images[1].url} alt={use.images[1].altText} style={{width:'100%'}}/>\n\t\t\t\t<h2 style={styles.h2}>{use.name}</h2>\n\t\t\t\t<h3 style={styles.h3}>{use.addresses[1].city}, {use.addresses[1].stateCode}</h3>\n\t\t\t\t</Link>\n\t\t\t)\n\t\t})\n\t\tthis.setState({ParkGridStateParks:mList});\n\t})\n} \n\nparkHandler(event) {\n\t\n\tvar parkId = event.target.nodeName\n\tconsole.log(\"id: \"+parkId);\n\t\t\n} \n\n\t render() { \n  return (\n  \t<div> \n\t  <Grid container >\n\t  \t <Grid item xs={12}>\n\t  \t\t<h1 style={styles.h1}>{targetId} State National Parks</h1>\n\t  \t</Grid> \n\t  \t<Grid item xs={12}>\n\t  \t\t\t\t<Link onClick={this.parkHandler()}/>\n\t  \t\t\t</Grid> \n\t \t\t</Grid>\n\t  \n\t  {this.state.ParkGridStateParks}\t\t\n\t</div>\n  );\n }\n}\nexport default ParkGridStateParks\nconst styles ={\n\th1:{\n\t\ttextAlign:'center',\n\t},\n\th2:{\n\t\tmarginTop:'-8%',\n\t\tcolor:'white',\n\t},\n\th3:{\n\t\tmarginTop:'-2%',\n\t\tcolor:'white',\n\t},\n}\n\n"]},"metadata":{},"sourceType":"module"}