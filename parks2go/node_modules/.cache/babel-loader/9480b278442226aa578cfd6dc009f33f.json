{"ast":null,"code":"var _jsxFileName = \"/Users/jenplaza/Documents/SHARE/schoolProjects/jenPlaza_DVP5/parks2go/src/components/grids/parkGridStateParks.js\";\n// JavaScript Document\nimport React from 'react'; //Material UI\n\nimport { makeStyles } from '@material-ui/styles';\nimport GridList from '@material-ui/core/GridList';\nimport Grid from '@material-ui/core/Grid';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nlet sCode = window.location.pathname;\nlet newSC = sCode.split('/stateActivities/');\nnewSC.shift();\nconst targetId = newSC;\nconst endpoint = `statecode=${targetId}&limit=2`; //Smart Component\n\nclass ParkGridStateParks extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      parkListing: []\n    };\n  }\n\n  parkClick(event) {\n    window.onclick = event => {\n      //console.log(event.target);\n      var parkId = event.target.id;\n      window.location.assign(`http://localhost:3000/park/${parkId}`);\n    };\n  } //calling fetchData function\n\n\n  componentDidMount() {\n    this.fetchParks();\n  } //fetching API\n\n\n  fetchParks() {\n    fetch(`https://developer.nps.gov/api/v1/parks?${endpoint}&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq`).then(results => {\n      return results.json();\n    }).then(data => {\n      let mList = data.data.map((use, i) => {\n        return /*#__PURE__*/React.createElement(GridList, {\n          key: i,\n          style: styles.gridList,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 4\n          }\n        }, /*#__PURE__*/React.createElement(GridListTile, {\n          style: styles.paper,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 5\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          id: use.parkCode,\n          src: use.images[0].url,\n          alt: use.images[0].altText,\n          style: styles.indImgs,\n          onClick: this.parkClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 6\n          }\n        }), /*#__PURE__*/React.createElement(GridListTileBar, {\n          titleWrap: true,\n          title: use.images[0].title,\n          style: {\n            wordWrap: 'break-word'\n          },\n          subtitle: /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 104\n            }\n          }, use.addresses[0].city, \", \", use.addresses[0].stateCode),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 5\n          }\n        })));\n      });\n      this.setState({\n        ParkGridStateParks: mList\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, this.state.ParkGridStateParks));\n  }\n\n}\n\nexport default ParkGridStateParks;\nconst styles = {\n  root: {\n    direction: 'row',\n    flexGrow: '1',\n    margin: '1%'\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    marginBottom: '3%'\n  },\n  gridList: {\n    justifyContent: 'space-around',\n    margin: '0.5%'\n  },\n  paper: {\n    textAlign: 'center',\n    width: '600px',\n    height: '500px',\n    backgroundColor: 'rgb(15,15,15,0.4)',\n    listStyleType: 'none'\n  },\n  indImgs: {\n    height: '100%',\n    width: '100%'\n  }\n};\n\nconst useStyles = theme => ({\n  root: {\n    direction: 'row',\n    flexGrow: '1',\n    margin: '1%'\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    marginBottom: '13%',\n    justifyContent: 'space-around'\n  },\n  gridList: {\n    justifyContent: 'space-around',\n    margin: '0.5%'\n  },\n  paper: {\n    textAlign: 'center',\n    width: '650px',\n    height: '500px',\n    backgroundColor: 'rgb(15,15,15,0.4)',\n    listStyleType: 'none'\n  },\n  indImgs: {\n    height: '100%',\n    width: '100%'\n  }\n});","map":{"version":3,"sources":["/Users/jenplaza/Documents/SHARE/schoolProjects/jenPlaza_DVP5/parks2go/src/components/grids/parkGridStateParks.js"],"names":["React","makeStyles","GridList","Grid","GridListTile","GridListTileBar","sCode","window","location","pathname","newSC","split","shift","targetId","endpoint","ParkGridStateParks","Component","state","parkListing","parkClick","event","onclick","parkId","target","id","assign","componentDidMount","fetchParks","fetch","then","results","json","data","mList","map","use","i","styles","gridList","paper","parkCode","images","url","altText","indImgs","title","wordWrap","addresses","city","stateCode","setState","render","root","container","direction","flexGrow","margin","display","flexWrap","marginBottom","justifyContent","textAlign","width","height","backgroundColor","listStyleType","useStyles","theme"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAAQC,UAAR,QAAyB,qBAAzB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AAEC,IAAIC,KAAK,GAAGC,MAAM,CAACC,QAAP,CAAgBC,QAA5B;AACA,IAAIC,KAAK,GAAGJ,KAAK,CAACK,KAAN,CAAY,mBAAZ,CAAZ;AACAD,KAAK,CAACE,KAAN;AAED,MAAMC,QAAQ,GAAGH,KAAjB;AACA,MAAMI,QAAQ,GAAI,aAAYD,QAAS,UAAvC,C,CAGA;;AACA,MAAME,kBAAN,SAAiCf,KAAK,CAACgB,SAAvC,CAAiD;AAAA;AAAA;AAAA,SAEhDC,KAFgD,GAEzC;AACNC,MAAAA,WAAW,EAAE;AADP,KAFyC;AAAA;;AAMjDC,EAAAA,SAAS,CAACC,KAAD,EAAQ;AAChBb,IAAAA,MAAM,CAACc,OAAP,GAAgBD,KAAK,IAAI;AACxB;AAEA,UAAIE,MAAM,GAAGF,KAAK,CAACG,MAAN,CAAaC,EAA1B;AACAjB,MAAAA,MAAM,CAACC,QAAP,CAAgBiB,MAAhB,CAAwB,8BAA6BH,MAAO,EAA5D;AACA,KALD;AAMA,GAbgD,CAejD;;;AACCI,EAAAA,iBAAiB,GAAE;AACnB,SAAKC,UAAL;AACA,GAlBgD,CAoBjD;;;AACCA,EAAAA,UAAU,GAAE;AACZC,IAAAA,KAAK,CAAE,0CAAyCd,QAAS,mDAApD,CAAL,CACEe,IADF,CACOC,OAAO,IAAG;AAChB,aAAOA,OAAO,CAACC,IAAR,EAAP;AACA,KAHD,EAGGF,IAHH,CAGQG,IAAI,IAAG;AAEd,UAAIC,KAAK,GAAGD,IAAI,CAACA,IAAL,CAAUE,GAAV,CAAc,CAACC,GAAD,EAAMC,CAAN,KAAU;AACnC,4BACA,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEA,CAAf;AAAkB,UAAA,KAAK,EAAEC,MAAM,CAACC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACC,oBAAC,YAAD;AAAc,UAAA,KAAK,EAAED,MAAM,CAACE,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACC;AAAK,UAAA,EAAE,EAAEJ,GAAG,CAACK,QAAb;AAAuB,UAAA,GAAG,EAAEL,GAAG,CAACM,MAAJ,CAAW,CAAX,EAAcC,GAA1C;AAA+C,UAAA,GAAG,EAAEP,GAAG,CAACM,MAAJ,CAAW,CAAX,EAAcE,OAAlE;AAA2E,UAAA,KAAK,EAAEN,MAAM,CAACO,OAAzF;AAAkG,UAAA,OAAO,EAAE,KAAKzB,SAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,eAEA,oBAAC,eAAD;AAAiB,UAAA,SAAS,MAA1B;AAA2B,UAAA,KAAK,EAAEgB,GAAG,CAACM,MAAJ,CAAW,CAAX,EAAcI,KAAhD;AAAuD,UAAA,KAAK,EAAE;AAACC,YAAAA,QAAQ,EAAE;AAAX,WAA9D;AAAyF,UAAA,QAAQ,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAOX,GAAG,CAACY,SAAJ,CAAc,CAAd,EAAiBC,IAAxB,QAAgCb,GAAG,CAACY,SAAJ,CAAc,CAAd,EAAiBE,SAAjD,CAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFA,CADD,CADA;AAQA,OATW,CAAZ;AAUA,WAAKC,QAAL,CAAc;AAACnC,QAAAA,kBAAkB,EAACkB;AAApB,OAAd;AACA,KAhBD;AAiBA;;AACCkB,EAAAA,MAAM,GAAG;AACT,wBACD;AAAK,MAAA,KAAK,EAAEd,MAAM,CAACe,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACK,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,KAAK,EAAEf,MAAM,CAACgB,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,KAAKpC,KAAL,CAAWF,kBADX,CADL,CADC;AAOA;;AAhD+C;;AAkDjD,eAAeA,kBAAf;AACA,MAAMsB,MAAM,GAAE;AACde,EAAAA,IAAI,EAAC;AACJE,IAAAA,SAAS,EAAC,KADN;AAEJC,IAAAA,QAAQ,EAAC,GAFL;AAGJC,IAAAA,MAAM,EAAC;AAHH,GADS;AAMdH,EAAAA,SAAS,EAAC;AACNI,IAAAA,OAAO,EAAE,MADH;AAERC,IAAAA,QAAQ,EAAE,MAFF;AAGTC,IAAAA,YAAY,EAAC;AAHJ,GANI;AAWdrB,EAAAA,QAAQ,EAAE;AACTsB,IAAAA,cAAc,EAAE,cADP;AAETJ,IAAAA,MAAM,EAAC;AAFE,GAXI;AAedjB,EAAAA,KAAK,EAAE;AACHsB,IAAAA,SAAS,EAAE,QADR;AAELC,IAAAA,KAAK,EAAC,OAFD;AAGLC,IAAAA,MAAM,EAAE,OAHH;AAILC,IAAAA,eAAe,EAAE,mBAJZ;AAKLC,IAAAA,aAAa,EAAC;AALT,GAfO;AAsBdrB,EAAAA,OAAO,EAAC;AACPmB,IAAAA,MAAM,EAAE,MADD;AAEPD,IAAAA,KAAK,EAAC;AAFC;AAtBM,CAAd;;AA4BA,MAAMI,SAAS,GAAGC,KAAK,KAAK;AAC5Bf,EAAAA,IAAI,EAAC;AACJE,IAAAA,SAAS,EAAC,KADN;AAEJC,IAAAA,QAAQ,EAAC,GAFL;AAGJC,IAAAA,MAAM,EAAC;AAHH,GADuB;AAM5BH,EAAAA,SAAS,EAAC;AACNI,IAAAA,OAAO,EAAE,MADH;AAERC,IAAAA,QAAQ,EAAE,MAFF;AAGTC,IAAAA,YAAY,EAAC,KAHJ;AAITC,IAAAA,cAAc,EAAE;AAJP,GANkB;AAY5BtB,EAAAA,QAAQ,EAAE;AACTsB,IAAAA,cAAc,EAAE,cADP;AAETJ,IAAAA,MAAM,EAAC;AAFE,GAZkB;AAgB5BjB,EAAAA,KAAK,EAAE;AACHsB,IAAAA,SAAS,EAAE,QADR;AAELC,IAAAA,KAAK,EAAC,OAFD;AAGLC,IAAAA,MAAM,EAAE,OAHH;AAILC,IAAAA,eAAe,EAAE,mBAJZ;AAKLC,IAAAA,aAAa,EAAC;AALT,GAhBqB;AAuB5BrB,EAAAA,OAAO,EAAC;AACPmB,IAAAA,MAAM,EAAE,MADD;AAEPD,IAAAA,KAAK,EAAC;AAFC;AAvBoB,CAAL,CAAvB","sourcesContent":["// JavaScript Document\nimport React from 'react';\n\n//Material UI\nimport {makeStyles} from '@material-ui/styles';\nimport GridList from '@material-ui/core/GridList';\nimport Grid from '@material-ui/core/Grid';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\n\n let sCode = window.location.pathname;\n let newSC = sCode.split('/stateActivities/');\n newSC.shift();\n\nconst targetId = newSC;\nconst endpoint = `statecode=${targetId}&limit=2`;\n\n\n//Smart Component\nclass ParkGridStateParks extends React.Component {\n\t//declaring state and new object\n\tstate ={\n\t\tparkListing: [],\n\t}\n\nparkClick(event) {\n\twindow.onclick= event => {\n\t\t//console.log(event.target);\n\t\t\n\t\tvar parkId = event.target.id;\n\t\twindow.location.assign(`http://localhost:3000/park/${parkId}`);\n\t};\n} \n\n//calling fetchData function\n\tcomponentDidMount(){\n\tthis.fetchParks();\n}\n\n//fetching API\n fetchParks(){\n\tfetch(`https://developer.nps.gov/api/v1/parks?${endpoint}&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq`)\n\t\t.then(results =>{\n\t\treturn results.json();\n\t}).then(data =>{\n\n\t\tlet mList = data.data.map((use, i)=>{\n\t\t\treturn(\n\t\t\t<GridList key={i} style={styles.gridList}>\n\t\t\t\t<GridListTile style={styles.paper}>\n\t\t\t\t\t<img id={use.parkCode} src={use.images[0].url} alt={use.images[0].altText} style={styles.indImgs} onClick={this.parkClick} />\n\t\t\t\t<GridListTileBar titleWrap title={use.images[0].title} style={{wordWrap: 'break-word',}} subtitle={<span>{use.addresses[0].city}, {use.addresses[0].stateCode}</span>} />\n\t\t\t\t</GridListTile>\t\n\t\t\t\t</GridList>\n\t\t\t)\n\t\t})\n\t\tthis.setState({ParkGridStateParks:mList});\n\t})\n} \n\t render() { \n  return (\n <div style={styles.root}>\n      <Grid container style={styles.container}>\n\t  \t\t{this.state.ParkGridStateParks}\t\n     </Grid>\n    </div>\n  );\n }\n}\nexport default ParkGridStateParks\nconst styles ={\nroot:{\n\tdirection:'row',\n\tflexGrow:'1',\n\tmargin:'1%',\n\t},\ncontainer:{\n    display: 'flex',\n\t flexWrap: 'wrap',\n\tmarginBottom:'3%',\n\t},\ngridList: {\n\tjustifyContent: 'space-around',\n\tmargin:'0.5%',\n  },\npaper: { \n    textAlign: 'center',\n\t\twidth:'600px',\n\t\theight: '500px',\n\t\tbackgroundColor: 'rgb(15,15,15,0.4)',\n\t\tlistStyleType:'none',\n  },\nindImgs:{\n\theight: '100%',\n\twidth:'100%',\n\t},\n}\n\nconst useStyles = theme => ({\nroot:{\n\tdirection:'row',\n\tflexGrow:'1',\n\tmargin:'1%',\n\t},\ncontainer:{\n    display: 'flex',\n\t flexWrap: 'wrap',\n\tmarginBottom:'13%',\n\tjustifyContent: 'space-around',\n\t},\ngridList: {\n\tjustifyContent: 'space-around',\n\tmargin:'0.5%',\n  },\npaper: { \n    textAlign: 'center',\n\t\twidth:'650px',\n\t\theight: '500px',\n\t\tbackgroundColor: 'rgb(15,15,15,0.4)',\n\t\tlistStyleType:'none',\n  },\nindImgs:{\n\theight: '100%',\n\twidth:'100%',\n\t},\n});"]},"metadata":{},"sourceType":"module"}