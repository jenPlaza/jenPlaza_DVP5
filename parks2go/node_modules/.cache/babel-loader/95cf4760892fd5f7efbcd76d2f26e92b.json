{"ast":null,"code":"var _jsxFileName = \"/Users/jenplaza/Documents/SHARE/schoolProjects/jenPlaza_DVP5/parks2go/src/pages/stateActivities.js\";\n// JavaScript Document\nimport React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport ParkGridStateParks from '../components/grids/parkGridStateParks'; //Material UI\n\nimport { withStyles } from '@material-ui/styles';\nimport Link from '@material-ui/core/Link';\nimport Grid from \"@material-ui/core/Grid\";\n\nconst styles = theme => ({\n  container: {\n    justifyContent: 'space-around',\n    padding: '4%',\n    columns: '5 auto',\n    paddingBottom: '4%' //border:'1px solid blue'\n\n  },\n  activities: {\n    padding: '3%' //border:'1px solid red'\n\n  },\n  ul: {\n    margin: 0,\n    padding: 0\n  },\n  li: {\n    color: 'grey',\n    textDecoration: 'none',\n    listStyleType: 'none'\n  },\n  h1: {\n    textAlign: 'center'\n  },\n  h3: {\n    padding: '2%',\n    marginLeft: '8%',\n    //marginTop:'1%',\n    marginBottom: '-6%',\n    border: '1px solid red'\n  }\n}); //console.log(window.location.pathname);\n\n\nlet sCode = window.location.pathname;\nlet newSC = sCode.split('/stateActivities/');\nnewSC.shift();\nconst targetId = newSC;\nconst endpoint = `statecode=${targetId}`; //Smart Component\n\nclass StateActivities extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activityListings: []\n    };\n  }\n\n  //calling fetchData function\n  componentDidMount() {\n    this.fetchActivities();\n  }\n\n  filterByActivity(current_value, i, activityId) {\n    for (let i = 0; i < current_value.activities.length; i++) {\n      let activity = current_value.activities[i];\n      return true;\n    } //console.log(current_value);\n\n\n    return false;\n  }\n\n  activityClick(event) {\n    window.onclick = event => {\n      //console.log(event.target);\n      const activityId = event.target.id;\n      window.location.assign(`http://localhost:3000/stateParks/${targetId}/${activityId}`);\n    };\n  }\n\n  helperFunction(_allActivities) {\n    let clean = [];\n\n    for (let j = 0; j < _allActivities.length; j++) {\n      let match = false;\n\n      for (let i = 0; i < clean.length; i++) {\n        if (_allActivities[j].id == clean[i].id) {\n          match = true; //test\n          //console.log(\"Match\",_allActivities[j]);\n        }\n      }\n\n      if (!match) clean.push(_allActivities[j]);\n\n      let sortingArray = (a, b) => {\n        if (a.name < b.name) {\n          return -1;\n        } else {\n          return 1;\n        }\n      };\n    }\n\n    return clean.sort(this.sortingArray);\n  } //fetching API\n\n\n  fetchActivities() {\n    const {\n      classes\n    } = this.props;\n    fetch(`https://developer.nps.gov/api/v1/parks?${endpoint}&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq`).then(results => {\n      return results.json();\n    }).then(data => {\n      let filteredArray = data.data.filter(this.filterByActivity);\n      let allActivities = [];\n      let mList = filteredArray.map((use, i) => {\n        const {\n          classes\n        } = this.props;\n        return /*#__PURE__*/React.createElement(Link, {\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 5\n          }\n        }, use.activities.map(activity => {\n          allActivities.push(activity);\n          return /*#__PURE__*/React.createElement(\"li\", {\n            key: activity.id,\n            id: activity.id,\n            className: classes.li,\n            onClick: this.activityClick,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 6\n            }\n          }, activity.name);\n        }));\n      });\n      let cleanActivities = this.helperFunction(allActivities);\n      /*\t\t//test\n      \t\tconsole.log(allActivities)\n      \t\tconsole.log(cleanActivities)*/\n\n      this.setState({\n        activityListings: cleanActivities,\n        StateActivities: mList\n      });\n    });\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: classes.h1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 6\n      }\n    }, targetId, \" State National Parks\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(ParkGridStateParks, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.h3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 6\n      }\n    }, \" Filter parks by activity\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.activities,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: classes.ul,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 8\n      }\n    }, this.state.activityListings.map((v, i) => /*#__PURE__*/React.createElement(\"li\", {\n      key: i,\n      name: v.name,\n      id: v.id,\n      className: classes.li,\n      onClick: this.activityClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 49\n      }\n    }, v.name)))))));\n  }\n\n}\n\nexport default withStyles(styles)(StateActivities);","map":{"version":3,"sources":["/Users/jenplaza/Documents/SHARE/schoolProjects/jenPlaza_DVP5/parks2go/src/pages/stateActivities.js"],"names":["React","BrowserRouter","Router","ParkGridStateParks","withStyles","Link","Grid","styles","theme","container","justifyContent","padding","columns","paddingBottom","activities","ul","margin","li","color","textDecoration","listStyleType","h1","textAlign","h3","marginLeft","marginBottom","border","sCode","window","location","pathname","newSC","split","shift","targetId","endpoint","StateActivities","Component","state","activityListings","componentDidMount","fetchActivities","filterByActivity","current_value","i","activityId","length","activity","activityClick","event","onclick","target","id","assign","helperFunction","_allActivities","clean","j","match","push","sortingArray","a","b","name","sort","classes","props","fetch","then","results","json","data","filteredArray","filter","allActivities","mList","map","use","cleanActivities","setState","render","v"],"mappings":"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","sourcesContent":["// JavaScript Document\nimport React from 'react';\nimport{ BrowserRouter as Router }from 'react-router-dom'\nimport ParkGridStateParks from '../components/grids/parkGridStateParks';\n\n//Material UI\nimport {withStyles} from '@material-ui/styles';\nimport Link from '@material-ui/core/Link';\nimport Grid from \"@material-ui/core/Grid\";\n\nconst styles = theme => ({\n\tcontainer:{\n\t\tjustifyContent:'space-around',\n\t\tpadding:'4%',\n\t\tcolumns:'5 auto',\n\t\tpaddingBottom:'4%',\n\t\t//border:'1px solid blue'\n\t},\n\tactivities:{\n\t\tpadding:'3%',\n\t\t//border:'1px solid red'\n\t},\n\tul:{\n\t\tmargin:0,\n\t\tpadding:0,\n\t},\n\tli:{\n\t\tcolor:'grey',\n\t\ttextDecoration:'none',\n\t\tlistStyleType:'none',\n\t},\n\th1:{\n\t\ttextAlign:'center',\n\t},\n\th3:{\n\t\tpadding:'2%',\n\t\tmarginLeft:'8%',\n\t\t//marginTop:'1%',\n\t\tmarginBottom:'-6%',\n\t\tborder:'1px solid red'\n\t},\n});\n\n//console.log(window.location.pathname);\n let sCode = window.location.pathname;\n let newSC = sCode.split('/stateActivities/');\n newSC.shift();\n\nconst targetId = newSC;\nconst endpoint = `statecode=${targetId}`;\n\n//Smart Component\nclass StateActivities extends React.Component {\n\t//declaring state and new object\n\tstate ={\n\t\tactivityListings:[],\n\t} \n\n//calling fetchData function\n\tcomponentDidMount(){\n\t\tthis.fetchActivities();\n}\n\nfilterByActivity(current_value, i, activityId){\n\tfor(let i=0; i< current_value.activities.length;i++ ) {\n\t\t\t\tlet activity = current_value.activities[i];\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\t//console.log(current_value);\n\t\treturn false;\n}\n\nactivityClick(event) {\n\twindow.onclick= event => {\n\t\t//console.log(event.target);\n\t\t\n\t\tconst activityId = event.target.id;\n\t\twindow.location.assign(`http://localhost:3000/stateParks/${targetId}/${activityId}`);\n\t};\n}\n\nhelperFunction(_allActivities){\n\tlet clean=[];\n\tfor(let j = 0; j < _allActivities.length; j++){\n\t\tlet match = false;\n\t\tfor(let i = 0 ; i < clean.length ; i++){\n\t\t\tif(_allActivities[j].id == clean[i].id)\n\t\t\t\t{\n\t\t\t\t\tmatch = true;\n\t\t\t\t\t//test\n\t\t\t\t\t//console.log(\"Match\",_allActivities[j]);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t}\n\t\tif(!match ) clean.push(_allActivities[j])\n\t\tlet sortingArray = (a,b)=>{\n\t\tif(a.name < b.name){\n\t\t\treturn -1;\n\t\t}else{\n\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn clean.sort(this.sortingArray);\n}\n\n//fetching API\nfetchActivities(){\n\t const { classes } = this.props;\nfetch(`https://developer.nps.gov/api/v1/parks?${endpoint}&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq`)\n\t\t.then(results =>{\n\t\treturn results.json();\n\t}\n\t\t\t ).then(data =>{\n\t\tlet filteredArray = data.data.filter(this.filterByActivity);\n\t\tlet allActivities = [];\n\t\tlet mList = filteredArray.map((use, i)=>{\n\t\t\tconst  {classes}  = this.props;\n\t\t\treturn(\n\t\t\t\t<Link key={i}>\n\t\t\t\t{use.activities.map(activity =>{\n\t\t\t\tallActivities.push(activity)\n\t\t\t\t\treturn(\n\t\t\t\t\t<li key={activity.id} id={activity.id} className={classes.li} onClick={this.activityClick}>{activity.name}</li>\t\n\t\t\t\t\t\t)})}\n\t\t\t\t</Link>\n\t\t\t)\n\t\t})\n\t\tlet cleanActivities = this.helperFunction(allActivities)\n\t\t\n/*\t\t//test\n\t\tconsole.log(allActivities)\n\t\tconsole.log(cleanActivities)*/\n\t\t\n\t\tthis.setState({activityListings:cleanActivities,StateActivities:mList});\n\t})\n}\n\t render() { \n\t\t const { classes } = this.props;\n  return (\n<Router>\n<Grid container>\n\t  \t  <Grid item xs={12}>\n\t  \t\t<h1 className={classes.h1}>{targetId} State National Parks</h1>\n\t  \t</Grid> \n\t\t<Grid item xs={12}>\n\t  \t\t<ParkGridStateParks />\n\t\t</Grid>\n\t  <Grid item xs={12} className={classes.h3}>\n\t  \t\t<h3> Filter parks by activity</h3>\n\t\t</Grid>\n\t  \t<Grid item xs={12} className={classes.container}>\n\t  \t  \t\t<div className={classes.activities}>\n\t  \t\t\t\t<ul className={classes.ul}>\n\t  \t\t\t\t\t{this.state.activityListings.map((v,i)=><li key={i} name={v.name} id={v.id} className={classes.li} onClick={this.activityClick}>{v.name}</li>)}\n\t  \t\t\t\t</ul>\n\t   \t\t\t</div>\n\t  \t\t</Grid> \n\t\t</Grid> \n\t\t </Router>\n  \t);\n\t }\n}\nexport default withStyles(styles)(StateActivities);\n\n"]},"metadata":{},"sourceType":"module"}