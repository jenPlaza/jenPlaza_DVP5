{"ast":null,"code":"var _jsxFileName = \"/Users/jenplaza/Documents/SHARE/schoolProjects/jenPlaza_DVP5/parks2go/src/pages/stateParks.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    width: 500,\n    height: 450\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)'\n  }\n})); //console.log(window.location.pathname);\n\nlet sCode = window.location.pathname;\nlet newSC = sCode.split('/stateParks/');\nnewSC.shift();\nconst parkId = newSC;\nconst activity = 'artsandculture';\nconst targetId = newSC;\nconst endpoint = `statecode=${targetId}`; //Smart Component\n\nclass StateParks extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      picListing: []\n    };\n  }\n\n  parkClick(event) {\n    window.onclick = event => {\n      //console.log(event.target);\n      //console.log(event.target.id);\n      var parkId = event.target.id;\n      window.location.assign(`http://localhost:3000/park/${parkId}`);\n    };\n  } //calling fetchData function\n\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  filterByActivity(current_value, i) {\n    for (let i = 0; i < current_value.activities.length; i++) {\n      let activity = current_value.activities[i];\n      if (activity.id == '7CE6E935-F839-4FEC-A63E-052B1DEF39D2') return true;\n    }\n\n    console.log(current_value);\n    return false;\n  } //fetching API\n\n\n  fetchData() {\n    fetch(`https://developer.nps.gov/api/v1/parks?${endpoint}&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq`).then(results => {\n      return results.json();\n    }).then(data => {\n      let filteredArray = data.data.filter(this.filterByActivity);\n      let mList = filteredArray.map((use, i) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          id: use.parkCode,\n          src: use.images[0].url,\n          alt: use.images[0].altText,\n          style: styles.indImgs,\n          onClick: this.parkClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(GridListTileBar, {\n          title: use.title,\n          subtitle: /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 58\n            }\n          }, \"by: \", use.author),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }\n        }));\n      });\n      this.setState({\n        StateParks: mList\n      });\n    });\n  }\n\n  render() {\n    const classes = useStyles();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(GridList, {\n      cellHeight: 180,\n      className: classes.gridList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GridListTile, {\n      cols: 2,\n      style: {\n        height: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ListSubheader, {\n      component: \"div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, \"December\")), this.state.StateParks));\n  }\n\n}\n\nexport default StateParks;\nconst styles = {\n  item: {\n    columns: '3',\n    margin: '1%'\n  },\n  li: {\n    listStyleType: 'none'\n  },\n  indImgs: {\n    height: '100%',\n    width: '100%',\n    marginBottom: '5%'\n  },\n  h2: {\n    marginTop: '-20%',\n    paddingLeft: '3%',\n    color: 'white'\n  },\n  h5: {\n    marginTop: '-6%',\n    paddingLeft: '3%',\n    color: 'white'\n  }\n};","map":{"version":3,"sources":["/Users/jenplaza/Documents/SHARE/schoolProjects/jenPlaza_DVP5/parks2go/src/pages/stateParks.js"],"names":["React","makeStyles","GridList","GridListTile","GridListTileBar","ListSubheader","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","icon","color","sCode","window","location","pathname","newSC","split","shift","parkId","activity","targetId","endpoint","StateParks","Component","state","picListing","parkClick","event","onclick","target","id","assign","componentDidMount","fetchData","filterByActivity","current_value","i","activities","length","console","log","fetch","then","results","json","data","filteredArray","filter","mList","map","use","parkCode","images","url","altText","styles","indImgs","title","author","setState","render","classes","item","columns","margin","li","listStyleType","marginBottom","h2","marginTop","paddingLeft","h5"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: 500,\n    height: 450,\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)',\n  },\n}));\n\n//console.log(window.location.pathname);\nlet sCode = window.location.pathname;\n let newSC = sCode.split('/stateParks/');\n newSC.shift();\nconst parkId = newSC;\n\nconst activity = 'artsandculture'\nconst targetId = newSC;\nconst endpoint = `statecode=${targetId}`;\n\n//Smart Component\nclass StateParks extends React.Component {\n\t//declaring state and new object\n\tstate ={\n\t\tpicListing: []\n\t}\n\nparkClick(event) {\n\twindow.onclick= event => {\n\t\t//console.log(event.target);\n\t\t//console.log(event.target.id);\n\t\t\n\t\tvar parkId = event.target.id;\n\t\twindow.location.assign(`http://localhost:3000/park/${parkId}`);\n\t};\n} \n\n//calling fetchData function\n\tcomponentDidMount(){\n\tthis.fetchData();\n}\n\nfilterByActivity(current_value, i){\n\n\t\t\tfor(let i=0; i< current_value.activities.length;i++ ) {\n\t\t\t\tlet activity = current_value.activities[i];\n\t\t\t\tif(activity.id =='7CE6E935-F839-4FEC-A63E-052B1DEF39D2')\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\tconsole.log(current_value);\n\t\treturn false;\n}\n\n//fetching API\n fetchData(){\n\tfetch(`https://developer.nps.gov/api/v1/parks?${endpoint}&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq`)\n\t\t.then(results =>{\n\t\treturn results.json();\n\t}).then(data =>{\n\t\t\n\t\tlet filteredArray = data.data.filter(this.filterByActivity);\n\t\t\n\t\tlet mList = filteredArray.map((use, i)=>{\n\t\t\treturn(\n\t\t\t\t\n\t\t\t\t\n          <div>\n            <img id={use.parkCode} src={use.images[0].url} alt={use.images[0].altText} style={styles.indImgs} onClick={this.parkClick}/>\n            <GridListTileBar title={use.title} subtitle={<span>by: {use.author}</span>} />\n\t\t\t</div>\n  \n\t\t\t)\n\t\t})\n\t\t\n\t\tthis.setState({StateParks:mList});\n\t})\n}\n\t render() { \n\t\t const classes = useStyles();\n  return (\n\t  \n\t   <div className={classes.root}>\n      <GridList cellHeight={180} className={classes.gridList}>\n        <GridListTile cols={2} style={{ height: 'auto' }}>\n          <ListSubheader component=\"div\">December</ListSubheader>\n        </GridListTile>\n       \n\t  \t{this.state.StateParks}\n      </GridList>\n    </div>\n\n \n \t\t\n  );\n }\n}\nexport default StateParks\n\nconst styles ={\n\titem:{\n\tcolumns:'3',\n\t\tmargin:'1%'\n\t},\n\tli:{\n\tlistStyleType:'none',\t\n\t},\n\tindImgs:{\n\theight: '100%',\n\twidth:'100%',\n\t\tmarginBottom:'5%',\n\t},\n\th2:{\n\t\tmarginTop:'-20%',\n\t\tpaddingLeft:'3%',\n\t\tcolor:'white',\n\t},\n\th5:{\n\t\tmarginTop:'-6%',\n\t\tpaddingLeft:'3%',\n\t\tcolor:'white',\n\t},\n}"]},"metadata":{},"sourceType":"module"}