{"ast":null,"code":"var _jsxFileName = \"/Users/jenplaza/jpDocs/PROJECTS/Projects/schoolProjects/parks2go/parks2go/src/components/grids/parkGridHome.js\";\n// JavaScript Document\nimport React from 'react';\n\n//Material UI\nimport GridList from '@material-ui/core/GridList';\nimport Grid from '@material-ui/core/Grid';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport Inprogress from '../progress_indicator/inProgress';\nconst endpoint = 'limit=3';\n\n//Smart Component\nclass ParkGridHome extends React.Component {\n  constructor(...args) {\n    super(...args);\n    //declaring state and new object\n    this.state = {\n      imageListing: []\n    };\n  }\n  parkClick(event) {\n    window.onclick = event => {\n      //console.log(event.target);\n\n      var parkId = event.target.id;\n      window.location.assign(`https://jenplaza.github.io/parks2go/park/${parkId}`);\n    };\n  }\n\n  //calling fetchData function\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  //fetching API\n  fetchData() {\n    this.setState({\n      isLoading: true\n    }, () => {\n      fetch(`https://developer.nps.gov/api/v1/parks?\t${endpoint}&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq`).then(results => {\n        return results.json();\n      }).then(data => {\n        this.setState({\n          isLoading: false,\n          data: data.data\n        });\n      });\n    });\n  }\n  render() {\n    const {\n      data,\n      isLoading\n    } = this.state;\n    /*console.log(isLoading)*/ //testing: true\n\n    if (isLoading) {\n      return /*#__PURE__*/React.createElement(Inprogress, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 20\n        }\n      });\n    }\n    let newArray = data;\n    /*console.log(newArray)*/ //testing: newArray = data\n\n    if (newArray != null) {\n      return /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 5\n        }\n      }, newArray.map((use, i) => /*#__PURE__*/React.createElement(GridList, {\n        key: i,\n        cellHeight: 325,\n        style: styles.gridList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(GridListTile, {\n        cols: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        id: use.parkCode,\n        src: use.images[0].url,\n        alt: use.images[0].altText,\n        onClick: this.parkClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(GridListTileBar, {\n        title: use.images[0].title,\n        subtitle: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 60\n          }\n        }, use.addresses[0].city, \", \", use.addresses[0].stateCode),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 5\n        }\n      })))));\n    }\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 6\n      }\n    }, this.state.ParkGridHome);\n  }\n}\nexport default ParkGridHome;\nconst styles = {\n  gridList: {\n    paddingBottom: '0.5%'\n  }\n};","map":{"version":3,"names":["React","GridList","Grid","GridListTile","GridListTileBar","Inprogress","endpoint","ParkGridHome","Component","constructor","args","state","imageListing","parkClick","event","window","onclick","parkId","target","id","location","assign","componentDidMount","fetchData","setState","isLoading","fetch","then","results","json","data","render","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","newArray","container","map","use","i","key","cellHeight","style","styles","gridList","cols","parkCode","src","images","url","alt","altText","onClick","title","subtitle","addresses","city","stateCode","paddingBottom"],"sources":["/Users/jenplaza/jpDocs/PROJECTS/Projects/schoolProjects/parks2go/parks2go/src/components/grids/parkGridHome.js"],"sourcesContent":["// JavaScript Document\nimport React from 'react';\n\n//Material UI\nimport GridList from '@material-ui/core/GridList';\nimport Grid from '@material-ui/core/Grid';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport Inprogress from '../progress_indicator/inProgress'\n\nconst endpoint = 'limit=3';\n\n//Smart Component\nclass ParkGridHome extends React.Component {\n\t//declaring state and new object\n\tstate ={\n\t\timageListing: []\n\t}\n\nparkClick(event) {\n\twindow.onclick= event => {\n\t\t//console.log(event.target);\n\t\t\n\t\tvar parkId = event.target.id;\n\t\twindow.location.assign(`https://jenplaza.github.io/parks2go/park/${parkId}`);\n\t};\n} \n\n//calling fetchData function\n\tcomponentDidMount(){\n\tthis.fetchData();\n}\n\n//fetching API\nfetchData(){\n\t\t\tthis.setState({ isLoading: true }, () => {\n\t\t\t\tfetch(`https://developer.nps.gov/api/v1/parks?\t${endpoint}&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq`)\n\t\t\t\t.then(results =>{\n\t\t\t\treturn results.json();\n\t\t\t\t}).then(data => {this.setState({\n\t\t\t\tisLoading:false,\n\t\t\t\tdata:data.data\n\t\t\t})\n\t\t})\n\t})\n}\n\n render(){\n\t\t const { data, isLoading } = this.state; \n\t\t \t/*console.log(isLoading)*///testing: true\n\t\t\t\n\t\t if(isLoading){\n            return <Inprogress />\n          }\n\t\t\t\n\t\t\tlet newArray = data;\n\t\t\t /*console.log(newArray)*/ //testing: newArray = data\n\t\t\t \n\t\t\tif (newArray != null) {\n        \t\treturn (\n\t\t\t\t<Grid container  >\n\t\t\t\t\t{newArray.map((use, i) =>\n\t\t\t\t<GridList key={i} cellHeight={325} style={styles.gridList}>\n\t\t\t\t<GridListTile cols={2} >\n\t\t\t\t\t<img id={use.parkCode} src={use.images[0].url} alt={use.images[0].altText} onClick={this.parkClick} />\n\t\t\t\t<GridListTileBar title={use.images[0].title} subtitle={<span>{use.addresses[0].city}, {use.addresses[0].stateCode}</span>} />\n\t\t\t\t</GridListTile>\t\n\t\t\t\t</GridList>\n\t\t\t\t\t)}\n            \t\t</Grid>\n        \t\t)}\n    \t\t\n  \t\treturn (\n \t\t\t\t<div>\n\t  \t\t\t\t{this.state.ParkGridHome}\t\n    \t\t\t</div>\n  \t\t\t\t);\n \t\t\t}\n\t\t}\nexport default ParkGridHome;\nconst styles ={\n\tgridList:{\n\t\tpaddingBottom:'0.5%',\n\t},\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}