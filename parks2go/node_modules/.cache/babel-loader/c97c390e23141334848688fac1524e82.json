{"ast":null,"code":"var _jsxFileName = \"/Users/jenplaza/Documents/SHARE/schoolProjects/jenPlaza_DVP5/parks2go/src/pages/stateParks.js\";\n// JavaScript Document\nimport React from 'react';\nimport Inprogress from '../components/progress_indicator/inProgress'; //Material UI\n\nimport { makeStyles } from '@material-ui/styles';\nimport GridList from '@material-ui/core/GridList';\nimport Grid from '@material-ui/core/Grid';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar'; //import LinearProgress from '@material-ui/core/LinearProgress';\n//console.log(window.location.pathname);\n\nlet sCode = window.location.pathname;\nlet newSC = sCode.split('/stateParks/');\nnewSC.shift();\nconst targetId = newSC;\nconst endpoint = `statecode=${targetId}`; //Smart Component\n\nclass StateParks extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      picListing: [],\n      isLoading: false\n    };\n  }\n\n  parkClick(event) {\n    window.onclick = event => {\n      //console.log(event.target);\n      var parkId = event.target.id;\n      window.location.assign(`http://localhost:3000/park/${parkId}`);\n    };\n  } //calling fetchData function\n\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  filterByActivity(current_value, i) {\n    for (let i = 0; i < current_value.activities.length; i++) {\n      let activity = current_value.activities[i];\n      if (activity.id === '7CE6E935-F839-4FEC-A63E-052B1DEF39D2') return true;\n    } //console.log(current_value);\n\n\n    return false;\n  } //fetching API\n\n\n  fetchData(props) {\n    const classes = useStyles();\n    this.setState({\n      isLoading: true\n    }, () => {\n      fetch(`https://developer.nps.gov/api/v1/parks?${endpoint}&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq`).then(results => {\n        return results.json();\n      }).then(data => this.setState({\n        isLoading: false,\n        data: [data.data]\n      })); //console.log(\"state\", this.state.data)\n    });\n  }\n\n  render() {\n    let filteredArray;\n    const classes = useStyles();\n    const {\n      data,\n      isLoading\n    } = this.state;\n    console.log(isLoading);\n    console.log(data);\n\n    if (isLoading) {\n      //console.log(isLoading)\n      return /*#__PURE__*/React.createElement(Inprogress, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 20\n        }\n      });\n    }\n\n    console.log(data);\n    console.log(this.state);\n    filteredArray = this.state.data;\n    console.log(filteredArray); //if (this.state.data) {cannot \n\n    if (this.state.data && this.state.data.length > 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }, filteredArray.map(use => /*#__PURE__*/React.createElement(\"div\", {\n        key: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }\n      }, use.parkCode)));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 3\n      }\n    }, this.state.StateParks);\n  }\n\n}\n\nexport default StateParks;\nconst styles = {\n  root: {\n    direction: 'row',\n    flexGrow: '1'\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden'\n  },\n  gridList: {\n    paddingBottom: '0.2%'\n  },\n  paper: {\n    textAlign: 'center',\n    width: '399px',\n    height: '299px',\n    backgroundColor: 'rgb(15,15,15,0.4)',\n    listStyleType: 'none',\n    backgroundColor: 'white'\n  },\n  indImgs: {\n    height: '100%',\n    width: '100%'\n  }\n};\n\nconst useStyles = theme => ({\n  /*root:{\n  \tdirection:'row',\n  \tflexGrow:'1',\n  \tmargin:'1%',\n  \t},\n  container:{\n      display: 'flex',\n  \t flexWrap: 'wrap',\n  \tmarginBottom:'-2%',\n  \t},\n  gridList: {\n  \tjustifyContent: 'space-around',\n  \tmargin:'0.5%',\n    },\n  paper: { \n      textAlign: 'center',\n  \t\twidth:'380px',\n  \t\theight: '280px',\n  \t\tbackgroundColor: 'rgb(15,15,15,0.4)',\n  \t\tlistStyleType:'none',\n    },\n  indImgs:{\n  \theight: '100%',\n  \twidth:'100%',\n  \t},*/\n});","map":{"version":3,"sources":["/Users/jenplaza/Documents/SHARE/schoolProjects/jenPlaza_DVP5/parks2go/src/pages/stateParks.js"],"names":["React","Inprogress","makeStyles","GridList","Grid","GridListTile","GridListTileBar","sCode","window","location","pathname","newSC","split","shift","targetId","endpoint","StateParks","Component","state","picListing","isLoading","parkClick","event","onclick","parkId","target","id","assign","componentDidMount","fetchData","filterByActivity","current_value","i","activities","length","activity","props","classes","useStyles","setState","fetch","then","results","json","data","render","filteredArray","console","log","map","use","parkCode","styles","root","direction","flexGrow","container","display","flexWrap","justifyContent","overflow","gridList","paddingBottom","paper","textAlign","width","height","backgroundColor","listStyleType","indImgs","theme"],"mappings":"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","sourcesContent":["// JavaScript Document\nimport React from 'react';\nimport Inprogress from '../components/progress_indicator/inProgress'\n\n//Material UI\nimport {makeStyles} from '@material-ui/styles';\nimport GridList from '@material-ui/core/GridList';\nimport Grid from '@material-ui/core/Grid';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\n\n//import LinearProgress from '@material-ui/core/LinearProgress';\n\n//console.log(window.location.pathname);\nlet sCode = window.location.pathname;\n let newSC = sCode.split('/stateParks/');\n newSC.shift();\n\nconst targetId = newSC;\nconst endpoint = `statecode=${targetId}`;\n\n//Smart Component\nclass StateParks extends React.Component {\n\t//declaring state and new object\n\tstate ={\n\t\tpicListing: [],\n\t\tisLoading: false,\n\t}\n\nparkClick(event) {\n\twindow.onclick= event => {\n\t\t//console.log(event.target);\n\t\t\n\t\tvar parkId = event.target.id;\n\t\twindow.location.assign(`http://localhost:3000/park/${parkId}`);\n\t};\n} \n\n//calling fetchData function\n\tcomponentDidMount( ){\n\t\t\n\tthis.fetchData();\n}\n\nfilterByActivity(current_value, i){\n\t\t\t\n\t\t\tfor(let i=0; i< current_value.activities.length;i++ ) {\n\t\t\t\tlet activity = current_value.activities[i];\n\t\t\t\tif(activity.id ==='7CE6E935-F839-4FEC-A63E-052B1DEF39D2')\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\t//console.log(current_value);\n\t\treturn false;\n}\n\n//fetching API\n fetchData(props){\n\t const classes = useStyles();\n\tthis.setState({ isLoading: true }, () => {\n\n\tfetch(`https://developer.nps.gov/api/v1/parks?${endpoint}&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq`)\n\t\t.then(results => {\n\t\treturn results.json();\n\t}).then(data => this.setState({\n\t\t isLoading:false,\n\t\tdata:[data.data]\n\t\t}))\n\t\t//console.log(\"state\", this.state.data)\n\t})\n}\t\t   \n\t render() { \n\t\t let filteredArray;\n\t\t const classes = useStyles();\n\t\t const { data, isLoading } = this.state; \n\t\t \tconsole.log(isLoading)\n\t\t \tconsole.log(data)\n\t\t\t\n\t\t if(isLoading){\n\t\t\t//console.log(isLoading)\n            return <Inprogress />\n          }\n\t\tconsole.log(data)\n\t\t\t console.log(this.state)\n\t\t\t \n\t\t\t filteredArray = this.state.data;\n\t\t\t console.log(filteredArray)\n\t\t\t \n//if (this.state.data) {cannot \n\t\t\t \n\t\t\tif (this.state.data && this.state.data.length > 0) {\n        return (\n            <div>\n                {\n                    filteredArray.map((use =>\n                        <div key=\"\">\n                            {use.parkCode}\n                        </div>\n                    ))\n                }\n            </div>\n        );\n    }\n\n    return (\n\t\t<div>\n\t{this.state.StateParks}\t\n\t\t</div>\n\t);\n\n\t\t\t  \n\t}\n}\nexport default StateParks\n\nconst styles ={\nroot:{\n\tdirection:'row',\n\tflexGrow:'1',\n\t},\ncontainer:{\n    display: 'flex',\n\t flexWrap: 'wrap',\n\tjustifyContent: 'space-around',\n\toverflow: 'hidden',\n\t},\ngridList: {\n\tpaddingBottom:'0.2%',\n  },\npaper: { \n    textAlign: 'center',\n\t\twidth:'399px',\n\t\theight: '299px',\n\t\tbackgroundColor: 'rgb(15,15,15,0.4)',\n\t\tlistStyleType:'none',\n\t\tbackgroundColor:'white',\n  },\nindImgs:{\n\theight: '100%',\n\twidth:'100%',\n\t},\n\t \n}\n\nconst useStyles = theme => ({\n/*root:{\n\tdirection:'row',\n\tflexGrow:'1',\n\tmargin:'1%',\n\t},\ncontainer:{\n    display: 'flex',\n\t flexWrap: 'wrap',\n\tmarginBottom:'-2%',\n\t},\ngridList: {\n\tjustifyContent: 'space-around',\n\tmargin:'0.5%',\n  },\npaper: { \n    textAlign: 'center',\n\t\twidth:'380px',\n\t\theight: '280px',\n\t\tbackgroundColor: 'rgb(15,15,15,0.4)',\n\t\tlistStyleType:'none',\n  },\nindImgs:{\n\theight: '100%',\n\twidth:'100%',\n\t},*/\n});"]},"metadata":{},"sourceType":"module"}