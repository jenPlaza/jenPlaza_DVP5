{"ast":null,"code":"var _jsxFileName = \"/Users/jenplaza/jpDocs/PROJECTS/Projects/schoolProjects/parks2go/parks2go/src/pages/stateParks.js\";\n// JavaScript Document\nimport React from 'react';\nimport Inprogress from '../components/progress_indicator/inProgress'; //Material UI\n\nimport GridList from '@material-ui/core/GridList';\nimport Grid from '@material-ui/core/Grid';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nlet stCode = window.location.pathname; //console.log(stCode)//testing: /parks2go/stateParks/TX/7CE6E935-F839-4FEC-A63E-052B1DEF39D2\n\nlet newStC = stCode.split('/'); //console.log(newStC) //testing: [\"\", \"parks2go\", \"stateParks\", \"TX\", \"7CE6E935-F839-4FEC-A63E-052B1DEF39D2\"]\n\nvar actCd = newStC.pop(); //console.log(actCd) //testing: 7CE6E935-F839-4FEC-A63E-052B1DEF39D2\n\nvar stateCd = newStC.slice(3, 4); //console.log(stateCd) //testing: [\"TX\"]\n\nconst activityId = actCd;\nconst targetId = stateCd;\nconst endpoint = `statecode=${targetId}`; //Smart Component\n\nclass StateParks extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      picListing: [],\n      isLoading: false\n    };\n  }\n\n  parkClick(event) {\n    window.onclick = event => {\n      //console.log(event.target);\n      var parkId = event.target.id;\n      window.location.assign(`https://jenplaza.github.io/parks2go/park/${parkId}`);\n    };\n  } //calling fetchData function\n\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  filterByActivity(current_value, i) {\n    for (let i = 0; i < current_value.activities.length; i++) {\n      let activity = current_value.activities[i];\n      if (activity.id === `${activityId}`) return true;\n    }\n\n    return false;\n  } //fetching API\n\n\n  fetchData() {\n    this.setState({\n      isLoading: true\n    }, () => {\n      fetch(`https://developer.nps.gov/api/v1/parks?${endpoint}&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq`).then(results => {\n        return results.json();\n      }).then(data => {\n        this.setState({\n          isLoading: false,\n          data: data.data\n        });\n        let filteredArray = data.data.filter(this.filterByActivity);\n        let mList = filteredArray.map((use, i) => {\n          return /*#__PURE__*/React.createElement(GridList, {\n            key: i,\n            style: styles.gridList,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(GridListTile, {\n            style: styles.paper,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            id: use.parkCode,\n            src: use.images[0].url,\n            alt: use.images[0].altText,\n            onClick: this.parkClick,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }\n          }), /*#__PURE__*/React.createElement(GridListTileBar, {\n            title: use.images[0].title,\n            subtitle: /*#__PURE__*/React.createElement(\"span\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 23\n              }\n            }, use.addresses[0].city, \", \", use.addresses[0].stateCode),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }\n          })));\n        });\n        this.setState({\n          StateParks: mList\n        });\n      });\n    });\n  }\n\n  render() {\n    const {\n      isLoading\n    } = this.state;\n\n    if (isLoading) {\n      return /*#__PURE__*/React.createElement(Inprogress, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, this.state.StateParks));\n  }\n\n}\n\nexport default StateParks;\nconst styles = {\n  container: {\n    justifyContent: 'center'\n  },\n  gridList: {\n    padding: '0.1%'\n  },\n  paper: {\n    width: '428px',\n    height: '328px',\n    listStyleType: 'none',\n    backgroundColor: 'white'\n  }\n};","map":{"version":3,"sources":["/Users/jenplaza/jpDocs/PROJECTS/Projects/schoolProjects/parks2go/parks2go/src/pages/stateParks.js"],"names":["React","Inprogress","GridList","Grid","GridListTile","GridListTileBar","stCode","window","location","pathname","newStC","split","actCd","pop","stateCd","slice","activityId","targetId","endpoint","StateParks","Component","state","picListing","isLoading","parkClick","event","onclick","parkId","target","id","assign","componentDidMount","fetchData","filterByActivity","current_value","i","activities","length","activity","setState","fetch","then","results","json","data","filteredArray","filter","mList","map","use","styles","gridList","paper","parkCode","images","url","altText","title","addresses","city","stateCode","render","container","justifyContent","padding","width","height","listStyleType","backgroundColor"],"mappings":"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","sourcesContent":["// JavaScript Document\nimport React from 'react';\nimport Inprogress from '../components/progress_indicator/inProgress';\n\n//Material UI\nimport GridList from '@material-ui/core/GridList';\nimport Grid from '@material-ui/core/Grid';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\n\nlet stCode = window.location.pathname;\n//console.log(stCode)//testing: /parks2go/stateParks/TX/7CE6E935-F839-4FEC-A63E-052B1DEF39D2\nlet newStC = stCode.split('/');\n//console.log(newStC) //testing: [\"\", \"parks2go\", \"stateParks\", \"TX\", \"7CE6E935-F839-4FEC-A63E-052B1DEF39D2\"]\nvar actCd = newStC.pop();\n//console.log(actCd) //testing: 7CE6E935-F839-4FEC-A63E-052B1DEF39D2\n\nvar stateCd = newStC.slice(3, 4);\n//console.log(stateCd) //testing: [\"TX\"]\nconst activityId = actCd;\nconst targetId = stateCd;\nconst endpoint = `statecode=${targetId}`;\n\n//Smart Component\nclass StateParks extends React.Component {\n  //declaring state and new object\n  state = {\n    picListing: [],\n    isLoading: false,\n  };\n\n  parkClick(event) {\n    window.onclick = (event) => {\n      //console.log(event.target);\n\n      var parkId = event.target.id;\n      window.location.assign(\n        `https://jenplaza.github.io/parks2go/park/${parkId}`\n      );\n    };\n  }\n\n  //calling fetchData function\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  filterByActivity(current_value, i) {\n    for (let i = 0; i < current_value.activities.length; i++) {\n      let activity = current_value.activities[i];\n      if (activity.id === `${activityId}`) return true;\n    }\n    return false;\n  }\n\n  //fetching API\n  fetchData() {\n    this.setState({ isLoading: true }, () => {\n      fetch(\n        `https://developer.nps.gov/api/v1/parks?${endpoint}&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq`\n      )\n        .then((results) => {\n          return results.json();\n        })\n        .then((data) => {\n          this.setState({\n            isLoading: false,\n            data: data.data,\n          });\n\n          let filteredArray = data.data.filter(this.filterByActivity);\n\n          let mList = filteredArray.map((use, i) => {\n            return (\n              <GridList key={i} style={styles.gridList}>\n                <GridListTile style={styles.paper}>\n                  <img\n                    id={use.parkCode}\n                    src={use.images[0].url}\n                    alt={use.images[0].altText}\n                    onClick={this.parkClick}\n                  />\n                  <GridListTileBar\n                    title={use.images[0].title}\n                    subtitle={\n                      <span>\n                        {use.addresses[0].city}, {use.addresses[0].stateCode}\n                      </span>\n                    }\n                  />\n                </GridListTile>\n              </GridList>\n            );\n          });\n          this.setState({ StateParks: mList });\n        });\n    });\n  }\n  render() {\n    const { isLoading } = this.state;\n    if (isLoading) {\n      return <Inprogress />;\n    }\n\n    return (\n      <div>\n        <Grid container style={styles.container}>\n          {this.state.StateParks}\n        </Grid>\n      </div>\n    );\n  }\n}\nexport default StateParks;\n\nconst styles = {\n  container: {\n    justifyContent: 'center',\n  },\n  gridList: {\n    padding: '0.1%',\n  },\n  paper: {\n    width: '428px',\n    height: '328px',\n    listStyleType: 'none',\n    backgroundColor: 'white',\n  },\n};\n"]},"metadata":{},"sourceType":"module"}