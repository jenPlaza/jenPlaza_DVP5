{"ast":null,"code":"var _jsxFileName = \"/Users/jenplaza/Documents/SHARE/schoolProjects/jenPlaza_DVP5/parks2go/src/pages/stateParks.js\";\n// JavaScript Document\nimport React, { Component } from 'react';\nimport LargeImage from '../components/imgGallery/largeImage';\nimport ThumbnailGrid from '../components/imgGallery/thumbnail-grid'; //Material UI\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box'; //console.log(window.location.pathname);\n\nlet sCode = window.location.pathname;\nlet newSC = sCode.split('/stateParks/');\nnewSC.shift();\nconst parkId = newSC;\nconst activity = 'artsandculture';\nconst targetId = newSC;\nconst endpoint = `stateCode=${targetId}&ideq`;\n\nclass StateParks extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      imageArray: [],\n      imgIndex: 0\n    };\n\n    this.lgImage = () => {\n      const {\n        imageArray,\n        imgIndex\n      } = this.state;\n\n      if (imageArray.length) {\n        return /*#__PURE__*/React.createElement(LargeImage, {\n          lgImage: imageArray[imgIndex],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 5\n          }\n        });\n      }\n\n      return null;\n    };\n  }\n\n  //calling fetchData function\n  componentDidMount() {\n    this.fetchData();\n  } //fetch Api data and map json results in a list format\n\n\n  fetchData() {\n    fetch(`https://developer.nps.gov/api/v1/parks?${endpoint}&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq`).then(results => {\n      return results.json();\n    }).then(data => {\n      console.log(data.data[0].images);\n      let mList = data.data.map((use, i) => {\n        this.setState({\n          imageArray: data.data[i].images\n        });\n        return /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          style: styles.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 5\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          md: 8,\n          style: styles.leftCol,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 8\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 11,\n          style: styles.imgs,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 8\n          }\n        }, \"Park Images\"), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 11,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Box, {\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 7\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          id: use.parkCode,\n          src: use.images[i].url,\n          alt: use.images[i].altText,\n          style: {\n            width: '100%'\n          },\n          onClick: this.parkClick,\n          imgindex: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 5\n          }\n        }), /*#__PURE__*/React.createElement(\"h2\", {\n          style: styles.h2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 5\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 27\n          }\n        }, use.name)), /*#__PURE__*/React.createElement(\"h5\", {\n          style: styles.h5,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 5\n          }\n        }, use.addresses[0].city, \", \", use.addresses[0].stateCode)))), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          style: styles.indentRight,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 6\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 9\n          }\n        }, \"Park Activities\"), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 11,\n          style: styles.activities,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"ul\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 8\n          }\n        }, use.activities.map(activity => {\n          return /*#__PURE__*/React.createElement(\"li\", {\n            key: activity.id,\n            style: {},\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 8\n            }\n          }, activity.name);\n        }))))));\n      });\n      this.setState({\n        StateParks: mList\n      });\n    });\n  }\n\n  parkClick(e) {\n    const imageSelection = e.target.getAttribute('i');\n    console.log(e.target.getAttribute('i'));\n    this.setState({\n      imgindex: imageSelection\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      style: styles.thumbnails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }\n    }, this.lgImage(), this.state.StateParks));\n  }\n\n}\n\nexport default StateParks;\nconst styles = {\n  container: {\n    padding: '4%'\n  },\n  thumbnails: {\n    marginTop: '-20%'\n  }\n};","map":{"version":3,"sources":["/Users/jenplaza/Documents/SHARE/schoolProjects/jenPlaza_DVP5/parks2go/src/pages/stateParks.js"],"names":["React","Component","LargeImage","ThumbnailGrid","Grid","Link","Box","sCode","window","location","pathname","newSC","split","shift","parkId","activity","targetId","endpoint","StateParks","state","imageArray","imgIndex","lgImage","length","componentDidMount","fetchData","fetch","then","results","json","data","console","log","images","mList","map","use","i","setState","styles","container","leftCol","imgs","parkCode","url","altText","width","parkClick","h2","name","h5","addresses","city","stateCode","indentRight","activities","id","e","imageSelection","target","getAttribute","imgindex","render","thumbnails","padding","marginTop"],"mappings":"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","sourcesContent":["// JavaScript Document\nimport React, {Component} from 'react';\nimport LargeImage from '../components/imgGallery/largeImage'\nimport ThumbnailGrid from '../components/imgGallery/thumbnail-grid'\n\n//Material UI\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\n\n//console.log(window.location.pathname);\nlet sCode = window.location.pathname;\n let newSC = sCode.split('/stateParks/');\n newSC.shift();\nconst parkId = newSC;\n\nconst activity = 'artsandculture'\nconst targetId = newSC;\nconst endpoint = `stateCode=${targetId}&ideq`;\n\nclass StateParks extends React.Component {\n\tstate ={\n\t\timageArray: [],\n\t\timgIndex: 0\n\t}\n\n//calling fetchData function\n\tcomponentDidMount(){\n\tthis.fetchData();\n\t}\n\n\t//fetch Api data and map json results in a list format\nfetchData(){\n\tfetch(`https://developer.nps.gov/api/v1/parks?${endpoint}&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq`)\n\t\t.then(results =>{\n\t\treturn results.json();\n\t}).then(data =>{\n\t\tconsole.log(data.data[0].images)\n\t\t\n\t\tlet mList = data.data.map((use, i)=>{\n\t\t\tthis.setState({imageArray:data.data[i].images})\n\t\t\treturn(\n\t\t\t\t<Grid container style={styles.container}>\n\t  \t\t\t\t<Grid item xs={12} md={8} style={styles.leftCol}>\n{/*Park Images*/}\t\n\t  \t\t\t\t\t<Grid item xs={11} style={styles.imgs}>\n\t\t\t\t\t\t\t<h2>Park Images</h2>\n\t  \t\t\t\t\t<Grid item xs={11}>\n\t\t\t\t\t\t<Box key={i}>\n\t\t\t\t<img id={use.parkCode} src={use.images[i].url} alt={use.images[i].altText} style={{width:'100%'}} onClick={this.parkClick} imgindex={i}/>\n\t\t\t\t<h2 style={styles.h2}><b>{use.name}</b></h2>\n\t\t\t\t<h5 style={styles.h5}>{use.addresses[0].city}, {use.addresses[0].stateCode}</h5>\n\t\t\t\t</Box>\n\t  \t\t\t\t\t</Grid>\n\t   \t\t\t\t\t</Grid> \n\t\t\t\n\t \t\t\t\t\n{/*Park Activities*/}\n\t\t\t\t\t<Grid item xs={12} style={styles.indentRight}>\n\t\t  \t\t\t\t<h2>Park Activities</h2>\n\t  \t\t\t\t\t<Grid item xs={11} style={styles.activities}>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{use.activities.map(activity =>{\n\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<li key={activity.id} style={{}}>{activity.name}</li>\t\n\t\t\t\t\t\t\t)})}\n\t\t\t\t\t\t\t</ul>\n\t  \t\t\t\t\t</Grid>\n\t   \t\t\t\t</Grid> \n\n\t   \t\t\t</Grid> \n\t \t\t\n\t\t\t</Grid>   \t\t\n\t\t\t)\n\t\t})\n\n\t\tthis.setState({StateParks:mList});\n\t})\n}\n\n lgImage = () => {\n\tconst {imageArray, imgIndex} = this.state\n\tif(imageArray.length){\n\t\treturn(\n\t\t\t\t<LargeImage \n\t\t\tlgImage={imageArray[imgIndex]}\n\t\t\t/>\n\t\t)\n\t}\n\t return null\n }\n \n parkClick(e) {\t \nconst imageSelection = e.target.getAttribute('i')\n\nconsole.log(e.target.getAttribute('i'))\n\t this.setState({imgindex: imageSelection})\n }\n\trender(){\n\t\treturn(\n\t\t\t<Grid container style={styles.container}> \n\t\t\t\n\t\t\t\t<Grid item xs={12} style={styles.thumbnails}>\n\t\t\t{this.lgImage()}\n\t\t\t\t\t{this.state.StateParks}\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t)\n\t}\n}\nexport default StateParks\n\nconst styles ={\n\tcontainer: {\npadding:'4%',\n},\nthumbnails: {\nmarginTop:'-20%',\n},\n}"]},"metadata":{},"sourceType":"module"}