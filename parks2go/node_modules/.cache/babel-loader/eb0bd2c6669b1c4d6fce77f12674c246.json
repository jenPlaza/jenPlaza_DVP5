{"ast":null,"code":"import React from 'react';\nconst _apiHost = 'api/v1';\n\nasync function request(url, params, method = 'GET') {\n  const options = {\n    method,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  if (params) {\n    if (method === 'GET') {\n      url += '?' + objectToQueryString(params);\n    } else {\n      options.body = JSON.stringify(params);\n    }\n  }\n\n  const response = await fetch(_apiHost + url, options);\n\n  if (response.status !== 200) {\n    return generateErrorResponse('The server responded with an unexpected status.');\n  }\n\n  const result = await response.json();\n  return result;\n}\n\nfunction objectToQueryString(obj) {\n  return Object.keys(obj).map(key => key + '=' + obj[key]).join('&');\n}\n\nfunction generateErrorResponse(message) {\n  return {\n    status: 'error',\n    message\n  };\n}\n\nfunction get(url, params) {\n  return request(url, params);\n}\n\nfunction create(url, params) {\n  return request(url, params, 'POST');\n}\n\nfunction update(url, params) {\n  return request(url, params, 'PUT');\n}\n\nfunction remove(url, params) {\n  return request(url, params, 'DELETE');\n}\n\nexport default {\n  get,\n  create,\n  update,\n  remove\n};","map":{"version":3,"sources":["/Users/jenplaza/Documents/schoolProjects/jenPlaza_DVP5/parks2go/src/components/Fetch.js"],"names":["React","_apiHost","request","url","params","method","options","headers","objectToQueryString","body","JSON","stringify","response","fetch","status","generateErrorResponse","result","json","obj","Object","keys","map","key","join","message","get","create","update","remove"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAG,QAAjB;;AAEA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,MAA5B,EAAoCC,MAAM,GAAG,KAA7C,EAAoD;AAElD,QAAMC,OAAO,GAAG;AACdD,IAAAA,MADc;AAEdE,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAFK,GAAhB;;AAOA,MAAIH,MAAJ,EAAY;AACV,QAAIC,MAAM,KAAK,KAAf,EAAsB;AACpBF,MAAAA,GAAG,IAAI,MAAMK,mBAAmB,CAACJ,MAAD,CAAhC;AACD,KAFD,MAEO;AACLE,MAAAA,OAAO,CAACG,IAAR,GAAeC,IAAI,CAACC,SAAL,CAAeP,MAAf,CAAf;AACD;AACF;;AAED,QAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAACZ,QAAQ,GAAGE,GAAZ,EAAiBG,OAAjB,CAA5B;;AAEA,MAAIM,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,WAAOC,qBAAqB,CAAC,iDAAD,CAA5B;AACD;;AAED,QAAMC,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAArB;AAEA,SAAOD,MAAP;AAED;;AAED,SAASR,mBAAT,CAA6BU,GAA7B,EAAkC;AAChC,SAAOC,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAAiBG,GAAjB,CAAqBC,GAAG,IAAIA,GAAG,GAAG,GAAN,GAAYJ,GAAG,CAACI,GAAD,CAA3C,EAAkDC,IAAlD,CAAuD,GAAvD,CAAP;AACD;;AAED,SAASR,qBAAT,CAA+BS,OAA/B,EAAwC;AACtC,SAAO;AACLV,IAAAA,MAAM,EAAG,OADJ;AAELU,IAAAA;AAFK,GAAP;AAID;;AAED,SAASC,GAAT,CAAatB,GAAb,EAAkBC,MAAlB,EAA0B;AACxB,SAAOF,OAAO,CAACC,GAAD,EAAMC,MAAN,CAAd;AACD;;AAED,SAASsB,MAAT,CAAgBvB,GAAhB,EAAqBC,MAArB,EAA6B;AAC3B,SAAOF,OAAO,CAACC,GAAD,EAAMC,MAAN,EAAc,MAAd,CAAd;AACD;;AAEA,SAASuB,MAAT,CAAgBxB,GAAhB,EAAqBC,MAArB,EAA6B;AAC5B,SAAOF,OAAO,CAACC,GAAD,EAAMC,MAAN,EAAc,KAAd,CAAd;AACD;;AAED,SAASwB,MAAT,CAAgBzB,GAAhB,EAAqBC,MAArB,EAA6B;AAC3B,SAAOF,OAAO,CAACC,GAAD,EAAMC,MAAN,EAAc,QAAd,CAAd;AACD;;AAED,eAAe;AACbqB,EAAAA,GADa;AAEbC,EAAAA,MAFa;AAGbC,EAAAA,MAHa;AAIbC,EAAAA;AAJa,CAAf","sourcesContent":["import React from 'react';\n\nconst _apiHost = 'api/v1';\n\nasync function request(url, params, method = 'GET') {\n\n  const options = {\n    method,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  if (params) {\n    if (method === 'GET') {\n      url += '?' + objectToQueryString(params);\n    } else {\n      options.body = JSON.stringify(params);\n    }\n  }\n\n  const response = await fetch(_apiHost + url, options);\n\n  if (response.status !== 200) {\n    return generateErrorResponse('The server responded with an unexpected status.');\n  }\n\n  const result = await response.json();\n\n  return result;\n\n}\n\nfunction objectToQueryString(obj) {\n  return Object.keys(obj).map(key => key + '=' + obj[key]).join('&');\n}\n\nfunction generateErrorResponse(message) {\n  return {\n    status : 'error',\n    message\n  };\n}\n\nfunction get(url, params) {\n  return request(url, params);\n}\n\nfunction create(url, params) {\n  return request(url, params, 'POST');\n}\n\n function update(url, params) {\n  return request(url, params, 'PUT');\n}\n\nfunction remove(url, params) {\n  return request(url, params, 'DELETE');\n}\n\nexport default {\n  get,\n  create,\n  update,\n  remove\n};\n"]},"metadata":{},"sourceType":"module"}