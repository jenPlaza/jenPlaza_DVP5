{"ast":null,"code":"var _jsxFileName = \"/Users/jenplaza/Documents/SHARE/schoolProjects/jenPlaza_DVP5/parks2go/src/pages/stateParks.js\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\nconst useStyles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: 'rgb(15,15,15,0.5)'\n  },\n  gridList: {\n    width: 200,\n    height: 150\n  },\n  item: {\n    columns: '3',\n    margin: '1%'\n  },\n  li: {\n    listStyleType: 'none'\n  },\n  h2: {\n    marginTop: '-20%',\n    paddingLeft: '3%',\n    color: 'white'\n  },\n  h5: {\n    marginTop: '-6%',\n    paddingLeft: '3%',\n    color: 'white'\n  }\n}); //console.log(window.location.pathname);\n\n\nlet sCode = window.location.pathname;\nlet newSC = sCode.split('/stateParks/');\nnewSC.shift();\nconst parkId = newSC;\nconst activity = 'artsandculture';\nconst targetId = newSC;\nconst endpoint = `statecode=${targetId}`; //Smart Component\n\nclass StateParks extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      picListing: []\n    };\n  }\n\n  parkClick(event) {\n    window.onclick = event => {\n      //console.log(event.target);\n      //console.log(event.target.id);\n      var parkId = event.target.id;\n      window.location.assign(`http://localhost:3000/park/${parkId}`);\n    };\n  } //calling fetchData function\n\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  filterByActivity(current_value, i) {\n    for (let i = 0; i < current_value.activities.length; i++) {\n      let activity = current_value.activities[i];\n      if (activity.id == '7CE6E935-F839-4FEC-A63E-052B1DEF39D2') return true;\n    }\n\n    console.log(current_value);\n    return false;\n  } //fetching API\n\n\n  fetchData() {\n    fetch(`https://developer.nps.gov/api/v1/parks?${endpoint}&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq`).then(results => {\n      return results.json();\n    }).then(data => {\n      let filteredArray = data.data.filter(this.filterByActivity);\n      let mList = filteredArray.map((use, i) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 5\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          id: use.parkCode,\n          src: use.images[0].url,\n          alt: use.images[0].altText,\n          style: {\n            width: '100%',\n            height: '100%'\n          },\n          onClick: this.parkClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 5\n          }\n        }));\n      });\n      this.setState({\n        StateParks: mList\n      });\n    });\n  }\n\n  render() {\n    const classes = useStyles();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(GridList, {\n      cellHeight: 'auto',\n      className: classes.gridList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GridListTile, {\n      cols: 6,\n      style: {\n        height: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }), this.state.StateParks));\n  }\n\n}\n\nexport default withStyles(useStyles, {\n  withTheme: true\n})(StateParks);","map":{"version":3,"sources":["/Users/jenplaza/Documents/SHARE/schoolProjects/jenPlaza_DVP5/parks2go/src/pages/stateParks.js"],"names":["React","withStyles","GridList","GridListTile","GridListTileBar","ListSubheader","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","gridList","width","height","item","columns","margin","li","listStyleType","h2","marginTop","paddingLeft","color","h5","sCode","window","location","pathname","newSC","split","shift","parkId","activity","targetId","endpoint","StateParks","Component","state","picListing","parkClick","event","onclick","target","id","assign","componentDidMount","fetchData","filterByActivity","current_value","i","activities","length","console","log","fetch","then","results","json","data","filteredArray","filter","mList","map","use","parkCode","images","url","altText","setState","render","classes","withTheme"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\n\nconst useStyles = theme => ({\nroot: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: 'rgb(15,15,15,0.5)',\n  },\ngridList: {\n    width: 200,\n    height: 150,\n  },\nitem:{\n\tcolumns:'3',\n\t\tmargin:'1%'\n\t},\nli:{\n\tlistStyleType:'none',\t\n\t},\nh2:{\n\t\tmarginTop:'-20%',\n\t\tpaddingLeft:'3%',\n\t\tcolor:'white',\n\t},\nh5:{\n\t\tmarginTop:'-6%',\n\t\tpaddingLeft:'3%',\n\t\tcolor:'white',\n\t},\n});\n\n//console.log(window.location.pathname);\nlet sCode = window.location.pathname;\n let newSC = sCode.split('/stateParks/');\n newSC.shift();\nconst parkId = newSC;\n\nconst activity = 'artsandculture'\nconst targetId = newSC;\nconst endpoint = `statecode=${targetId}`;\n\n//Smart Component\nclass StateParks extends React.Component {\n\t//declaring state and new object\n\tstate ={\n\t\tpicListing: []\n\t}\n\nparkClick(event) {\n\twindow.onclick= event => {\n\t\t//console.log(event.target);\n\t\t//console.log(event.target.id);\n\t\t\n\t\tvar parkId = event.target.id;\n\t\twindow.location.assign(`http://localhost:3000/park/${parkId}`);\n\t};\n} \n\n//calling fetchData function\n\tcomponentDidMount(){\n\tthis.fetchData();\n}\n\nfilterByActivity(current_value, i){\n\t\t\t\n\t\t\tfor(let i=0; i< current_value.activities.length;i++ ) {\n\t\t\t\tlet activity = current_value.activities[i];\n\t\t\t\tif(activity.id =='7CE6E935-F839-4FEC-A63E-052B1DEF39D2')\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\tconsole.log(current_value);\n\t\treturn false;\n}\n\n//fetching API\n fetchData(){\n\tfetch(`https://developer.nps.gov/api/v1/parks?${endpoint}&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq`)\n\t\t.then(results =>{\n\t\treturn results.json();\n\t}).then(data =>{\n\t\t\n\t\tlet filteredArray = data.data.filter(this.filterByActivity);\n\t\t\n\t\tlet mList = filteredArray.map((use, i)=>\n\t\t{\n\t\t\treturn(\t\n\t\t\t <div>\n\t\t\t\t<img id={use.parkCode} src={use.images[0].url} alt={use.images[0].altText} style={{width:'100%', height:'100%'}} onClick={this.parkClick}/>\n            \t\n\t\t    </div>\n\t\t\t)})\n\t\tthis.setState({StateParks:mList});\n\t})\n}\n\t render() { \n\t\t const classes = useStyles();\n  return (\n\t  \n\t   <div className={classes.root}>\n      <GridList cellHeight={'auto'} className={classes.gridList}>\n        <GridListTile cols={6} style={{ height: 'auto' }}>\n        </GridListTile>\n       \n\t  \t{this.state.StateParks}\n      </GridList>\n    </div>\n\t\n  );\n }\n}\nexport default withStyles(useStyles, {withTheme:true})(StateParks);"]},"metadata":{},"sourceType":"module"}