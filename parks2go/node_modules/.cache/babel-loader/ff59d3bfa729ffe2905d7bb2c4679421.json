{"ast":null,"code":"var _jsxFileName = \"/Users/jenplaza/Documents/SHARE/schoolProjects/jenPlaza_DVP5/parks2go/src/pages/stateActivities.js\";\n// JavaScript Document\nimport React from 'react';\nimport ParkGridStateActivities from '../components/grids/parkGridStateActivities';\nimport Inprogress from '../components/progress_indicator/inProgress'; //Material UI\n\nimport { withStyles } from '@material-ui/styles';\nimport Link from '@material-ui/core/Link';\nimport Grid from \"@material-ui/core/Grid\";\n\nconst styles = theme => ({\n  container: {\n    justifyContent: 'space-around',\n    padding: '4%',\n    marginBottom: '5%',\n    columns: '2 auto',\n    [theme.breakpoints.up('md')]: {\n      columns: '6 auto',\n      marginTop: '-1%',\n      marginBottom: '0%'\n    },\n    [theme.breakpoints.up('lg')]: {\n      marginTop: '0%',\n      fontSize: '1.25em'\n    }\n  },\n  ul: {\n    margin: 0,\n    padding: 0\n  },\n  li: {\n    color: theme.palette.primary.light,\n    textDecoration: 'none',\n    listStyleType: 'none'\n  },\n  h1: {\n    textAlign: 'center',\n    color: theme.palette.secondary.main,\n    fontSize: 'larger'\n  },\n  h3: {\n    padding: '2%',\n    marginLeft: '2%',\n    marginTop: '3%',\n    marginBottom: '-4%',\n    [theme.breakpoints.up('md')]: {\n      marginTop: '0%'\n    }\n  }\n});\n\nlet sCode = window.location.pathname;\nlet newSC = sCode.split('/stateActivities/');\nnewSC.shift();\nconst targetId = newSC;\nconst endpoint = `statecode=${targetId}`; //Smart Component\n\nclass StateActivities extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activityListings: [],\n      isLoading: false\n    };\n  }\n\n  filterByActivity(current_value, i) {\n    for (let i = 0; i < current_value.activities.length; i++) {\n      let activity = current_value.activities[i];\n      return true;\n    } //console.log(current_value);\n\n\n    return false;\n  }\n\n  activityClick(event) {\n    window.onclick = event => {\n      event.preventDefault();\n      console.log(\"tab\"); //console.log(event.target);\n      //var activityId = event.target.id;\n      //window.location.assign(`https://jenplaza.github.io/parks2go/stateParks/${targetId}/${activityId}`);\n    };\n  }\n\n  helperFunction(_allActivities) {\n    let clean = [];\n\n    for (let j = 0; j < _allActivities.length; j++) {\n      let match = false;\n\n      for (let i = 0; i < clean.length; i++) {\n        if (_allActivities[j].id === clean[i].id) {\n          match = true; //testing\n          //console.log(\"Match\",_allActivities[j]);\n        }\n      }\n\n      if (!match) clean.push(_allActivities[j]);\n    }\n\n    return clean.sort((a, b) => a.name < b.name ? -1 : 1);\n  } //calling fetchData function\n\n\n  componentDidMount() {\n    this.fetchActivities();\n  } //fetching API\n\n\n  fetchActivities() {\n    const {\n      classes\n    } = this.props;\n    this.setState({\n      isLoading: true\n    }, () => {\n      fetch(`https://developer.nps.gov/api/v1/parks?${endpoint}&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq`).then(results => {\n        return results.json();\n      }).then(data => {\n        this.setState({\n          isLoading: false,\n          data: data.data\n        });\n        let filteredArray = data.data.filter(this.filterByActivity);\n        let allActivities = [];\n        let mList = filteredArray.map((use, i) => {\n          return /*#__PURE__*/React.createElement(Link, {\n            key: i,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 5\n            }\n          }, use.activities.map(activity => {\n            allActivities.push(activity);\n            return /*#__PURE__*/React.createElement(\"li\", {\n              key: activity.id,\n              id: activity.id,\n              className: classes.li,\n              onClick: this.activityClick,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 6\n              }\n            }, activity.name);\n          }));\n        });\n        let cleanActivities = this.helperFunction(allActivities);\n        this.setState({\n          activityListings: cleanActivities,\n          StateActivities: mList\n        });\n      });\n    });\n  }\n\n  render() {\n    const {\n      isLoading\n    } = this.state;\n    const {\n      classes\n    } = this.props;\n\n    if (isLoading) {\n      return /*#__PURE__*/React.createElement(Inprogress, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 12\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: classes.h1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 6\n      }\n    }, targetId, \" State National Parks\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(ParkGridStateActivities, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.h3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 6\n      }\n    }, \" Filter parks by activity\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: classes.ul,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 8\n      }\n    }, this.state.activityListings.map((v, i) => /*#__PURE__*/React.createElement(\"li\", {\n      key: i,\n      name: v.name,\n      id: v.id,\n      className: classes.li,\n      onClick: this.activityClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 49\n      }\n    }, v.name))))));\n  }\n\n}\n\nexport default withStyles(styles)(StateActivities);","map":{"version":3,"sources":["/Users/jenplaza/Documents/SHARE/schoolProjects/jenPlaza_DVP5/parks2go/src/pages/stateActivities.js"],"names":["React","ParkGridStateActivities","Inprogress","withStyles","Link","Grid","styles","theme","container","justifyContent","padding","marginBottom","columns","breakpoints","up","marginTop","fontSize","ul","margin","li","color","palette","primary","light","textDecoration","listStyleType","h1","textAlign","secondary","main","h3","marginLeft","sCode","window","location","pathname","newSC","split","shift","targetId","endpoint","StateActivities","Component","state","activityListings","isLoading","filterByActivity","current_value","i","activities","length","activity","activityClick","event","onclick","preventDefault","console","log","helperFunction","_allActivities","clean","j","match","id","push","sort","a","b","name","componentDidMount","fetchActivities","classes","props","setState","fetch","then","results","json","data","filteredArray","filter","allActivities","mList","map","use","cleanActivities","render","v"],"mappings":"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","sourcesContent":["// JavaScript Document\nimport React from 'react';\nimport ParkGridStateActivities from '../components/grids/parkGridStateActivities';\nimport Inprogress from '../components/progress_indicator/inProgress'\n\n//Material UI\nimport {withStyles} from '@material-ui/styles';\nimport Link from '@material-ui/core/Link';\nimport Grid from \"@material-ui/core/Grid\";\n\nconst styles = theme => ({\ncontainer:{\n\tjustifyContent:'space-around',\n\tpadding:'4%',\n\tmarginBottom:'5%',\n\tcolumns:'2 auto',\n\t[theme.breakpoints.up('md')]: {\n\t\tcolumns:'6 auto',\n    \tmarginTop: '-1%',\n\t\tmarginBottom:'0%',\n\t},\n\t[theme.breakpoints.up('lg')]: {\n    \tmarginTop: '0%',\n\t\tfontSize:'1.25em',\n\t},\n\t},\nul:{\n\tmargin:0,\n\tpadding:0,\n\t},\nli:{\n\tcolor:theme.palette.primary.light,\n\ttextDecoration:'none',\n\tlistStyleType:'none',\n\t},\nh1:{\n\ttextAlign:'center',\n\tcolor:theme.palette.secondary.main,\n\tfontSize:'larger',\n\t},\nh3:{\n\tpadding:'2%',\n\tmarginLeft:'2%',\n\tmarginTop:'3%',\n\tmarginBottom:'-4%',\n\t[theme.breakpoints.up('md')]: {\n    \tmarginTop: '0%',\n\t},\n\t},\n});\n\n let sCode = window.location.pathname;\n let newSC = sCode.split('/stateActivities/');\n newSC.shift();\n\nconst targetId = newSC;\nconst endpoint = `statecode=${targetId}`;\n\n//Smart Component\nclass StateActivities extends React.Component {\n\t//declaring state and new object\n\tstate ={\n\t\tactivityListings:[],\n\t\tisLoading: false,\n\t} \n\nfilterByActivity(current_value, i){\n\tfor(let i=0; i< current_value.activities.length;i++ ) {\n\t\t\t\tlet activity = current_value.activities[i];\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\t//console.log(current_value);\n\t\treturn false;\n}\n\nactivityClick(event) {\n\twindow.onclick= event => {\n\t\t\t\tevent.preventDefault();\n\t\tconsole.log(\"tab\");\n\t\t//console.log(event.target);\n\t\t\n\t\t//var activityId = event.target.id;\n\t\t//window.location.assign(`https://jenplaza.github.io/parks2go/stateParks/${targetId}/${activityId}`);\n\t};\n}\n\nhelperFunction(_allActivities){\n\tlet clean=[];\n\tfor(let j = 0; j < _allActivities.length; j++){\n\t\tlet match = false;\n\t\tfor(let i = 0 ; i < clean.length ; i++){\n\t\t\tif(_allActivities[j].id === clean[i].id)\n\t\t\t\t{\n\t\t\t\t\tmatch = true;\n\t\t\t\t\t\n\t\t\t\t\t//testing\n\t\t\t\t\t//console.log(\"Match\",_allActivities[j]);\n\t\t\t\t}\n\t\t}\n\t\tif(!match ) clean.push(_allActivities[j])\n\t}\n\treturn clean.sort((a,b)=>a.name<b.name?-1:1);\n}\n\n//calling fetchData function\n\tcomponentDidMount(){\n\t\tthis.fetchActivities();\n}\n\n//fetching API\nfetchActivities(){\n    const  {classes}  = this.props;\n\tthis.setState({ isLoading: true }, () => {\n\t\t\n\t\t\t\nfetch(`https://developer.nps.gov/api/v1/parks?${endpoint}&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq`)\n\t\t.then(results =>{\n\t\treturn results.json();\n\t}).then(data =>{this.setState({\n\t\t\t\tisLoading:false,\n\t\t\t\tdata:data.data\n\t\t\t})\n\t\n\t\tlet filteredArray = data.data.filter(this.filterByActivity);\n\t\tlet allActivities = [];\n\t\tlet mList = filteredArray.map((use, i)=>{\n\n\t\t\treturn(\n\t\t\t\t<Link key={i}>\n\t\t\t\t{use.activities.map(activity =>{\n\t\t\t\tallActivities.push(activity)\n\t\t\t\t\treturn(\n\t\t\t\t\t<li key={activity.id} id={activity.id} className={classes.li} onClick={this.activityClick}>{activity.name}</li>\t\n\t\t\t\t\t\t)})}\n\t\t\t\t</Link>\n\t\t\t)\n\t\t})\n\t\n\t\tlet cleanActivities = this.helperFunction(allActivities)\n\t\t\n\t\tthis.setState({activityListings:cleanActivities,StateActivities:mList})\n\t\t})\n\t})\n}\n\t render() { \n\t\t const { isLoading } = this.state; \n\t\t const { classes } = this.props;\n\t\t \n\t\t if(isLoading)\n\t\t {return <Inprogress />}\n\t\t \n  return (\n<Grid container>\n\t  \t  <Grid item xs={12}>\n\t  \t\t<h1 className={classes.h1}>{targetId} State National Parks</h1>\n\t  \t</Grid> \n\t\t<Grid item xs={12}>\n\t  \t\t<ParkGridStateActivities />\n\t\t</Grid>\n\t  <Grid item xs={12} className={classes.h3}>\n\t  \t\t<h3> Filter parks by activity</h3>\n\t\t</Grid>\n\t  \t<Grid item xs={12} className={classes.container}>\n\t  \t  \t\t<div>\n\t  \t\t\t\t<ul className={classes.ul}>\n\t  \t\t\t\t\t{this.state.activityListings.map((v,i)=><li key={i} name={v.name} id={v.id} className={classes.li} onClick={this.activityClick}>{v.name}</li>)}\n\t  \t\t\t\t</ul>\n\t   \t\t\t</div>\n\t  \t\t</Grid> \n\t\t</Grid> \n  \t\t);\n\t }\n}\nexport default withStyles(styles)(StateActivities);\n\n"]},"metadata":{},"sourceType":"module"}