{"ast":null,"code":"var _jsxFileName = \"/Users/jenplaza/Documents/SHARE/schoolProjects/jenPlaza_DVP5/parks2go/src/pages/stateParks.js\";\n// JavaScript Document\nimport React from 'react';\nimport Inprogress from '../components/progress_indicator/inProgress'; //Material UI\n\nimport GridList from '@material-ui/core/GridList';\nimport Grid from '@material-ui/core/Grid';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport { withStyles } from '@material-ui/core/styles';\nconst useStyles = withStyles(theme => ({\n  root: {\n    direction: 'row',\n    flexGrow: 1\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    overflow: 'hidden'\n  },\n  gridList: {\n    padding: '0.1%'\n  },\n  paper: {\n    textAlign: 'center',\n    //width:'430px',\n    //height: '330px',\n    listStyleType: 'none',\n    backgroundColor: 'white',\n    [theme.breakpoints.up('md')]: {//width:'400px',\n      //height: '300px',\n    }\n  },\n  indImgs: {//height: '100%',\n    //width:'100%',\n  }\n}));\nlet stCode = window.location.pathname;\nlet newStC = stCode.split('/');\nvar actCd = newStC.slice(3);\nvar stateCd = newStC.slice(2, 3);\nconst activityId = actCd;\nconst targetId = stateCd;\nconst endpoint = `statecode=${targetId}`; //Smart Component\n\nclass StateParks extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      picListing: [],\n      isLoading: false\n    };\n  }\n\n  parkClick(event) {\n    window.onclick = event => {\n      //console.log(event.target);\n      var parkId = event.target.id;\n      window.location.assign(`http://localhost:3000/park/${parkId}`);\n    };\n  } //calling fetchData function\n\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  filterByActivity(current_value, i) {\n    for (let i = 0; i < current_value.activities.length; i++) {\n      let activity = current_value.activities[i];\n      if (activity.id === `${activityId}`) return true;\n    }\n\n    return false;\n  } //fetching API\n\n\n  fetchData() {\n    this.setState({\n      isLoading: true\n    }, () => {\n      fetch(`https://developer.nps.gov/api/v1/parks?${endpoint}&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq`).then(results => {\n        return results.json();\n      }).then(data => {\n        this.setState({\n          isLoading: false,\n          data: data.data\n        });\n        let filteredArray = data.data.filter(this.filterByActivity);\n        let mList = filteredArray.map((use, i) => {\n          const {\n            classes\n          } = this.props;\n          return /*#__PURE__*/React.createElement(GridList, {\n            key: i,\n            cellHeight: 400,\n            className: classes.gridList,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 5\n            }\n          }, /*#__PURE__*/React.createElement(GridListTile, {\n            cols: 2,\n            className: classes.paper,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 5\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            id: use.parkCode,\n            src: use.images[0].url,\n            alt: use.images[0].altText,\n            className: classes.indImgs,\n            onClick: this.parkClick,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 5\n            }\n          }), /*#__PURE__*/React.createElement(GridListTileBar, {\n            title: use.images[0].title,\n            subtitle: /*#__PURE__*/React.createElement(\"span\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 60\n              }\n            }, use.addresses[0].city, \", \", use.addresses[0].stateCode),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 5\n            }\n          })));\n        });\n        this.setState({\n          StateParks: mList\n        });\n      });\n    });\n  }\n\n  render() {\n    const {\n      isLoading\n    } = this.state;\n    const {\n      classes\n    } = this.props;\n\n    if (isLoading) {\n      return /*#__PURE__*/React.createElement(Inprogress, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 12\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      className: classes.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }, this.state.StateParks));\n  }\n\n} //export default StateParks;\n\n\nexport default withStyles(useStyles)(StateParks);\n/*const styles ={\nroot:{\n\tdirection:'row',\n\tflexGrow:1,\n\t},\ncontainer:{\n    display: 'flex',\n\t flexWrap: 'wrap',\n\toverflow: 'hidden',\n\t},\n}*/","map":{"version":3,"sources":["/Users/jenplaza/Documents/SHARE/schoolProjects/jenPlaza_DVP5/parks2go/src/pages/stateParks.js"],"names":["React","Inprogress","GridList","Grid","GridListTile","GridListTileBar","withStyles","useStyles","theme","root","direction","flexGrow","container","display","flexWrap","overflow","gridList","padding","paper","textAlign","listStyleType","backgroundColor","breakpoints","up","indImgs","stCode","window","location","pathname","newStC","split","actCd","slice","stateCd","activityId","targetId","endpoint","StateParks","Component","state","picListing","isLoading","parkClick","event","onclick","parkId","target","id","assign","componentDidMount","fetchData","filterByActivity","current_value","i","activities","length","activity","setState","fetch","then","results","json","data","filteredArray","filter","mList","map","use","classes","props","parkCode","images","url","altText","title","addresses","city","stateCode","render"],"mappings":"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","sourcesContent":["// JavaScript Document\nimport React from 'react';\nimport Inprogress from '../components/progress_indicator/inProgress'\n\n//Material UI\nimport GridList from '@material-ui/core/GridList';\nimport Grid from '@material-ui/core/Grid';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst useStyles = withStyles(theme => ({\nroot:{\n\tdirection:'row',\n\tflexGrow:1,\n\t},\ncontainer:{\n    display: 'flex',\n\t flexWrap: 'wrap',\n\toverflow: 'hidden',\n\t},\ngridList: {\n\tpadding:'0.1%',\n  },\npaper: { \n    textAlign: 'center',\n\t\t//width:'430px',\n\t\t//height: '330px',\n\t\tlistStyleType:'none',\n\t\tbackgroundColor:'white',\n\t[theme.breakpoints.up('md')]: {\n    //width:'400px',\n\t//height: '300px',\n\t},\n  },\nindImgs:{\n\t//height: '100%',\n\t//width:'100%',\n\t},\n}));\n\nlet stCode = window.location.pathname;\nlet newStC = stCode.split('/');\n\nvar actCd = newStC.slice(3);\n\nvar stateCd = newStC.slice(2,3);\n\nconst activityId = actCd;\nconst targetId = stateCd;\nconst endpoint = `statecode=${targetId}`;\n\n//Smart Component\nclass StateParks extends React.Component {\n\t//declaring state and new object\n\tstate ={\n\t\tpicListing: [],\n\t\tisLoading: false,\n\t}\n\nparkClick(event) {\n\twindow.onclick= event => {\n\t\t//console.log(event.target);\n\t\t\n\t\tvar parkId = event.target.id;\n\t\twindow.location.assign(`http://localhost:3000/park/${parkId}`);\n\t};\n} \n\n//calling fetchData function\n\tcomponentDidMount(){\n\tthis.fetchData();\n}\n\nfilterByActivity(current_value, i){\n\t\t\t\n\t\t\tfor(let i=0; i< current_value.activities.length;i++ ) {\n\t\t\t\tlet activity = current_value.activities[i];\n\t\t\t\tif(activity.id === `${activityId}`)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\treturn false;\n}\n\n//fetching API\n fetchData(){\n\t \n\tthis.setState({ isLoading: true }, () => {\n\tfetch(`https://developer.nps.gov/api/v1/parks?${endpoint}&api_key=YpbDDtsNwQRi13JXZXiN7DnEIusWnKQLsCZW11xq`)\n\t\t.then(results =>{\n\t\treturn results.json();\n\t}).then(data =>{this.setState({\n\t\t\t\tisLoading:false,\n\t\t\t\tdata:data.data\n\t\t\t})\n\t\t\n\t\tlet filteredArray = data.data.filter(this.filterByActivity);\n\t\t\n\t\tlet mList = filteredArray.map((use, i)=>{\n\t\t\tconst  {classes}  = this.props;\n\t\t\treturn(\n\t\t\t\t<GridList key={i} cellHeight={400} className={classes.gridList}>\n\t\t\t\t<GridListTile cols={2} className={classes.paper}>\n\t\t\t\t<img id={use.parkCode} src={use.images[0].url} alt={use.images[0].altText} className={classes.indImgs} onClick={this.parkClick}/>\n\t\t\t\t<GridListTileBar title={use.images[0].title} subtitle={<span>{use.addresses[0].city}, {use.addresses[0].stateCode}</span>} />\n\t\t\t\t</GridListTile>\t\n\t\t\t\t</GridList>\n\t\t\t)\n\t\t})\n\t\t\tthis.setState({StateParks:mList});\n\t\t})\n\t})\n}\n\t render() { \n\t\t  const { isLoading } = this.state;  \n\t\tconst  {classes}  = this.props;\n\t\t if(isLoading)\n\t\t {return <Inprogress />}\n\t\t \n  return (\n\t  <div className={classes.root}>\n      <Grid container className={classes.container}>\n\t  \t{this.state.StateParks}\n     </Grid>\n    </div>\n  );\n }\n}\n//export default StateParks;\nexport default withStyles(useStyles)(StateParks);\n\n/*const styles ={\nroot:{\n\tdirection:'row',\n\tflexGrow:1,\n\t},\ncontainer:{\n    display: 'flex',\n\t flexWrap: 'wrap',\n\toverflow: 'hidden',\n\t},\n}*/\n\n"]},"metadata":{},"sourceType":"module"}